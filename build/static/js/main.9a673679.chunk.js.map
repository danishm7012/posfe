{"version":3,"sources":["helpers/isAuthenticated.js","Components/listItems.js","Components/Toast/toast.js","Components/Form/TextField.js","api/api.js","Components/Form/form.js","Components/Form/Checkout.js","Components/AppBar/AppBarComponent.js","Components/functions/search.js","Components/Customer/CustomerList.js","Components/Stock/StockList.js","Components/Stock/form.js","Components/Stock/Checkout.js","Components/Invoice/PrintInvoice.js","Components/Home/Components/customCountCard.js","Components/Home/home.js","Components/Invoice/AddInvoice.js","Components/Product/AddProduct.js","Components/Product/ManageCategory.js","Components/Product/ManageProduct.js","Components/Invoice/ManageInvoice.js","Components/Ledger/Suplier.js","Components/PersonDetail/PersonDetail.js","Components/Invoice/AllInvoices.js","Components/Stock/StockOfAllSuppliers.js","Components/AdminLogin/AdminLogin.js","Components/Payment/form.js","Components/Payment/PaymentForm.js","Components/Payment/PaymentList.js","Components/Ledger/AddLedger.js","route/route.js","Components/Dashboard.js","Components/Notfound/Notfound.js","App.js","reportWebVitals.js","index.js"],"names":["isAuthenticated","localStorage","getItem","isAdmin","useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","nested","paddingLeft","spacing","NestedList","classes","history","useHistory","React","useState","customer","setCustomer","supplier","setSupplier","stock","setStock","payment","setPayment","invoice","setInvoice","suite","setSuite","List","component","style","color","className","ListItem","button","onClick","push","ListItemIcon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","disablePadding","window","location","pathname","state","data","Alert","props","elevation","variant","marginTop","CustomizedSnackbars","open","setOpen","Snackbar","autoHideDuration","onClose","event","reason","anchorOrigin","vertical","horizontal","severity","type","title","TextField","Fragment","Grid","item","xs","height","required","fontSize","id","name","label","placeholder","value","onChange","borderWidth","inputType","axios","create","baseURL","margin","Form","firstName","setFirstName","email","setEmail","address","setAddress","contact","setContact","PBalance","setPBalance","setState","setTitle","error","setError","getCustomer","api","get","res","customer_name","contact_no","previous_balance","getsupplier","supplier_name","useEffect","addCustomer","a","post","customer_email","status","message","Error","editCustomer","put","alert","JSON","stringify","addSupplier","supplier_email","editSupplier","setTimeout","container","padding","autoComplete","e","target","marginBottom","sm","Button","size","appBar","position","layout","marginLeft","marginRight","breakpoints","up","stepper","buttons","display","justifyContent","Checkout","CssBaseline","AppBar","Toolbar","Typography","noWrap","Breadcrumbs","float","Link","href","AppBarComponent","searchQuery","query","setDataForSearch","from","re","RegExp","toUpperCase","temp1","map","x","product_name","match","buy_date","barcode","category","details","date","search","link1","link2","isButton","createData","Id","Name","Address","Contact","PreviousBalnce","Action","table","minWidth","visuallyHidden","border","clip","overflow","top","EnhancedTable","itemToDelete","setItemToDelete","setUserData","allData","setAllData","rows","setRows","Loading","setLoading","openDialog","setOpenDialog","handleDialog","get_all_customers","temp","_id","get_all_suppliers","DeleteItem","delete","reload","Paper","CircularProgress","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","row","index","scope","textDecoration","cursor","Dialog","DialogTitle","DialogActions","autoFocus","Product_Name","Supplier_Name","Buy_Date","Product_Per_Carton","Quantity","Buy_Price","Sale_Price","allStock","setAllStock","get_all_stocks","product_per_carton","quantity","buy_price","sale_price","split","prodcutName","setProductName","supplierName","setSupplierName","Date","buyDate","setBuyDate","productPerCarton","setProductPerCarton","setQuantity","buyPrice","setBuyPrice","salePrice","setSalePrice","paidAmount","setPaidAmount","AllSupliers","setAllSupliers","getStock","res1","addStock","paid_amount","editStock","fullWidth","Autocomplete","options","getOptionLabel","option","newValue","renderInput","params","ref","InputProps","inputProps","useToolbarStyles","paddingRight","highlight","secondary","main","lighten","light","text","dark","flex","EnhancedTableToolbar","DenseTable","allItems","si","qty","rate","amount","total","align","ComponentToPrint","this","lineHeight","textAlign","fontWeight","grand_total","totalDiscount","Component","Container","md","lg","el","componentRef","trigger","content","CustomCountCard","borderRadius","countCard","end","count","duration","separator","prefix","icon","link","Home","totalCustomers","setTotalCustomers","totalSuppliers","setTotalSuppliers","totalStock","setTotalStock","setTotalInvoice","totalSupBalance","reduce","accumulator","object","totalCustomerBalance","console","log","totalProductAmount","length","src","AddInvoice","allProducts","setAllProducts","allCustomers","setAllCustomers","selectedProduct","setSelectedProduct","CName","setCName","setDate","selectedCartons","setSelectedCartons","price","setPrice","discount","setDiscount","setTotal","toast","setToast","setType","setAllItems","grandTotal","setGrandTotal","setTotalDiscount","handleSubmit","product_id","products","Divider","onSubmit","class","disabled","carton","total1","discount1","parseInt","splice","allCategory","setAllCategory","allSupplier","setAllSupplier","barCode","setBarCode","productName","detail","setDetail","supplierPrice","setSupplierPrice","setCategory","response","productData","supplier_price","category_name","sl","action","setStatus","selectedItem","setSelectedItem","constainer","actions","BasicTable","sellno","setItem","serielNumber","Particular","ChequeNo","ChequeDate","Debit","Credit","Balance","SuplierLedger","setDebit","setCredit","get_all_Ledger","records","particular","chequeNo","chqDate","debit","credit","balance","total_debit","total_credit","rowSpan","colSpan","colspan","PersonDetail","to","URLSearchParams","StockOfAllSuppliers","AdminLogin","password","setPassword","first_name","set_first_name","last_name","set_last_name","isSignin","setIsSignin","signin","signup","Box","sx","mr","my","setDetails","setchqDate","set_paid_amount","set_chequeNo","submit","supplierID","PaymentForm","From","Details","PaidAmount","RemaingBalance","remaing_balance","AddLedger","customerID","Payment","entry","setentry","handleChange","checked","preventDefault","ammount","m","p","htmlFor","FormGroup","FormControlLabel","control","Switch","App","exact","path","CustomerList","StockList","StockCheckout","Manageinvoice","PrintInvoice","ManageCategory","AddProduct","ManageProduct","AllInvoices","PaymentList","toolbar","toolbarIcon","alignItems","mixins","zIndex","drawer","transition","transitions","easing","sharp","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","appBarSpacer","paddingTop","flexDirection","fixedHeight","Dashboard","clsx","IconButton","edge","clear","Drawer","Notfound","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a673679.chunk.js","sourcesContent":["export function isAuthenticated() {\r\n    const token = localStorage.getItem('token')\r\n    if (token) return true;\r\n    else return false;\r\n}\r\nexport function isAdmin() {\r\n    const admin = localStorage.getItem('isadmin')\r\n    if (admin) return true;\r\n    else return false;\r\n}\r\n\r\nexport default {\r\n    isAuthenticated,\r\n    isAdmin\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport StarBorder from '@material-ui/icons/StarBorder';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport { isAdmin } from '../helpers/isAuthenticated'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing(4),\r\n        backgroundColor: '#002447'\r\n    },\r\n}));\r\n\r\nexport default function NestedList() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [customer, setCustomer] = React.useState(false);\r\n    const [supplier, setSupplier] = React.useState(false);\r\n    const [stock, setStock] = React.useState(false);\r\n    const [payment, setPayment] = React.useState(false);\r\n    const [invoice, setInvoice] = React.useState(false);\r\n    const [suite, setSuite] = React.useState(false);\r\n\r\n    const handleClickCustomer = () => {\r\n        setCustomer(!customer);\r\n    };\r\n    const handleClickSupplier = () => {\r\n        setSupplier(!supplier);\r\n    };\r\n    const handleClickStock = () => {\r\n        setStock(!stock);\r\n    };\r\n    const handleClickInvoice = () => {\r\n        setInvoice(!invoice);\r\n    };\r\n    const handleClickSuite = () => {\r\n        setSuite(!suite);\r\n    };\r\n    const handleClickPayment = () => {\r\n        setPayment(!payment);\r\n    };\r\n\r\n\r\n    return (\r\n        <List\r\n            component=\"nav\"\r\n            aria-labelledby=\"nested-list-subheader\"\r\n            // subheader={\r\n            //     <ListSubheader component=\"div\" id=\"nested-list-subheader\" >\r\n            //         <h1 ><a href='/' style={{ color: '#f5f5f5', textDecoration: 'none' }}>Dashboard</a></h1>\r\n            //     </ListSubheader>\r\n            // }\r\n            style={{ backgroundColor: '#003366', color: '#f5f5f5' }}\r\n\r\n            className={classes.root}\r\n        >\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <ListItem button onClick={() => history.push('/')}>\r\n                <ListItemIcon>\r\n                    <ShowChartIcon style={{ color: '#f5f5f5' }} />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Dasboard\" />\r\n\r\n            </ListItem>\r\n\r\n\r\n\r\n            <ListItem button onClick={handleClickInvoice}>\r\n                <ListItemIcon>\r\n                    <ShowChartIcon style={{ color: '#f5f5f5' }} />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Sell\" />\r\n                {invoice ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItem>\r\n            <Collapse in={invoice} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                    <ListItem button className={classes.nested} onClick={() => window.location = '/manageinvoice'}>\r\n                        <ListItemIcon>\r\n                            <ListIcon style={{ color: '#f5f5f5' }} />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Manage Invoice\" />\r\n                    </ListItem>\r\n                    <ListItem button className={classes.nested} onClick={() => window.location = '/addinvoice'}>\r\n                        <ListItemIcon>\r\n                            <AddIcon style={{ color: 'f5f5f5' }} />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Add new Invoice\" />\r\n                    </ListItem>\r\n\r\n                </List>\r\n            </Collapse>\r\n\r\n\r\n\r\n            <ListItem button onClick={handleClickSuite}>\r\n                <ListItemIcon>\r\n                    <ShowChartIcon style={{ color: '#f5f5f5' }} />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"SUITE\" />\r\n                {suite ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItem>\r\n            <Collapse in={suite} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                    <ListItem button className={classes.nested} onClick={() => window.location = '/addcategory'}>\r\n                        <ListItemIcon>\r\n                            <ListIcon style={{ color: '#f5f5f5' }} />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Category\" />\r\n                    </ListItem>\r\n                    <ListItem button className={classes.nested} onClick={() => window.location = '/manageproduct'}>\r\n                        <ListItemIcon>\r\n                            <ListIcon style={{ color: '#f5f5f5' }} />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Manage Product\" />\r\n                    </ListItem>\r\n                    <ListItem button className={classes.nested} onClick={() => window.location = '/addproduct'}>\r\n                        <ListItemIcon>\r\n                            <AddIcon style={{ color: 'f5f5f5' }} />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Add Product\" />\r\n                    </ListItem>\r\n\r\n                </List>\r\n            </Collapse>\r\n\r\n\r\n            <ListItem button onClick={handleClickCustomer}>\r\n                <ListItemIcon>\r\n                    <PeopleIcon style={{ color: 'f5f5f5' }} />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Customers\" />\r\n                {customer ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItem>\r\n            <Collapse in={customer} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                    <ListItem button className={classes.nested} onClick={() => window.location = '/customerlist'}>\r\n                        <ListItemIcon>\r\n                            <ListIcon style={{ color: '#f5f5f5' }} />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Manage Customer\" />\r\n                    </ListItem>\r\n                    <ListItem button className={classes.nested} onClick={() => window.location = '/addcustomer'}>\r\n                        <ListItemIcon>\r\n                            <AddIcon style={{ color: 'f5f5f5' }} />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Add Customer\" />\r\n                    </ListItem>\r\n\r\n                </List>\r\n            </Collapse>\r\n\r\n\r\n            <ListItem button onClick={handleClickSupplier}>\r\n                <ListItemIcon>\r\n                    <PeopleIcon style={{ color: '#f5f5f5' }} />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Suppliers\" />\r\n                {supplier ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItem>\r\n            <Collapse in={supplier} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                    <ListItem button className={classes.nested} onClick={() => window.location = '/supplierlist'}>\r\n                        <ListItemIcon>\r\n                            <ListIcon style={{ color: '#f5f5f5' }} />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Manage Supplier\" />\r\n                    </ListItem>\r\n                    <ListItem button className={classes.nested} onClick={() => window.location = '/addsupplier'}>\r\n                        <ListItemIcon>\r\n                            <AddIcon style={{ color: 'f5f5f5' }} />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Add Supplier\" />\r\n                    </ListItem>\r\n\r\n                </List>\r\n            </Collapse>\r\n\r\n\r\n\r\n\r\n            <ListItem button onClick={handleClickStock}>\r\n                <ListItemIcon>\r\n                    <ShowChartIcon style={{ color: '#f5f5f5' }} />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Stocks\" />\r\n                {stock ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItem>\r\n            <Collapse in={stock} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                    <ListItem button className={classes.nested} onClick={() => window.location = '/stocklist'}>\r\n                        <ListItemIcon>\r\n                            <ListIcon style={{ color: '#f5f5f5' }} />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Manage Stock\" />\r\n                    </ListItem>\r\n                    <ListItem button className={classes.nested} onClick={() => window.location = '/addstock'}>\r\n                        <ListItemIcon>\r\n                            <AddIcon style={{ color: 'f5f5f5' }} />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Add Stock\" />\r\n                    </ListItem>\r\n\r\n                </List>\r\n            </Collapse>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <ListItem button onClick={handleClickPayment}>\r\n                <ListItemIcon>\r\n                    <ShowChartIcon style={{ color: '#f5f5f5' }} />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Payments\" />\r\n                {payment ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItem>\r\n            <Collapse in={payment} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                    <ListItem button className={classes.nested} onClick={() => window.location = '/customerpaymentList'}>\r\n                        <ListItemIcon>\r\n                            <ListIcon style={{ color: '#f5f5f5' }} />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Customer Payment\" />\r\n                    </ListItem>\r\n                    <ListItem button className={classes.nested} onClick={() => window.location = '/supplierpaymentList'}>\r\n                        <ListItemIcon>\r\n                            <AddIcon style={{ color: 'f5f5f5' }} />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Supplier Payment\" />\r\n                    </ListItem>\r\n\r\n                </List>\r\n            </Collapse>\r\n\r\n            {\r\n                isAdmin() &&\r\n\r\n                <ListItem button onClick={() => history.push({ pathname: '/addsubadmin', state: { data: 'sub admin' } })}>\r\n                    <ListItemIcon>\r\n                        <ShowChartIcon style={{ color: '#f5f5f5' }} />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Add SubAdmin\" />\r\n\r\n                </ListItem>\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n        </List>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function CustomizedSnackbars(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(props.open);\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            <Snackbar open={open} autoHideDuration={2000} onClose={handleClose} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\r\n                <Alert severity={props.type}>\r\n                    {props.title}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import { Grid } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nexport default function TextField(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <Grid item xs={3} style={{ height: 35 }}>\r\n                {props.title}\r\n                {props.required &&\r\n                    <span style={{ color: 'red', fontSize: 22 }}>*</span>\r\n                }\r\n            </Grid>\r\n            <Grid item xs={9} style={props.style}\r\n\r\n            >\r\n                {!props.type ?\r\n                    <input\r\n                        required={props.required}\r\n                        id={props.id}\r\n                        name={props.name}\r\n                        label={props.label}\r\n                        placeholder={props.placeholder}\r\n                        value={props.value}\r\n                        onChange={props.onChange}\r\n                        style={{ borderWidth: 0.1, width: '100%', height: 35, paddingLeft: 10 }}\r\n                        type={props.inputType}\r\n                    /> :\r\n                    <textarea\r\n                        style={{ width: '100%', height: 70, paddingLeft: 10 }}\r\n                        required={props.required}\r\n                        id={props.id}\r\n                        name={props.name}\r\n                        label={props.label}\r\n                        placeholder={props.placeholder}\r\n                        value={props.value}\r\n                        onChange={props.onChange}\r\n                    />\r\n                }\r\n            </Grid>\r\n        </React.Fragment >\r\n    )\r\n}\r\n","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n    baseURL: \"http://localhost:4001/api/\"\r\n    // baseURL: \"http://3.130.132.140/api/\"\r\n})","import React, { useEffect, useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from './TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport PeopleIcon from '@material-ui/icons/People'\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport KeyboardVoiceIcon from '@material-ui/icons/KeyboardVoice';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useHistory } from 'react-router-dom';\r\nimport api from '../../api/api';\r\nimport Toast from '../Toast/toast'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\nexport default function Form() {\r\n    const history = useHistory()\r\n    const classes = useStyles();\r\n    const [firstName, setFirstName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [address, setAddress] = useState('')\r\n    const [contact, setContact] = useState('')\r\n    const [PBalance, setPBalance] = useState('')\r\n    const [state, setState] = useState('addcustomer')\r\n    const [title, setTitle] = useState('Customer')\r\n    const [error, setError] = useState('Name and Contact Number must be filled')\r\n    const [open, setOpen] = useState(false)\r\n    const getCustomer = async (id) => {\r\n        try {\r\n            // alert('this here ')\r\n            const res = await api.get(`customer/get/${id}`)\r\n            setFirstName(res.data.data.customer_name)\r\n            setAddress(res.data.data.address)\r\n            setContact(res.data.data.contact_no)\r\n            setEmail(res.data.data.email)\r\n            setPBalance(res.data.data.previous_balance)\r\n            // alert(JSON.stringify(res.data.data))\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n    const getsupplier = async (id) => {\r\n        try {\r\n            const res = await api.get(`supplier/get/${id}`)\r\n            setFirstName(res.data.data.supplier_name)\r\n            setAddress(res.data.data.address)\r\n            setContact(res.data.data.contact_no)\r\n            setEmail(res.data.data.email)\r\n            setPBalance(res.data.data.previous_balance)\r\n            // alert(JSON.stringify(res.data.data.customer_name))\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (history.location.pathname == \"/editcustomer\") {\r\n            getCustomer(history.location.state.id)\r\n            setState('editcustomer')\r\n            setTitle('Customer')\r\n\r\n        }\r\n        if (history.location.pathname == \"/editsupplier\") {\r\n            getsupplier(history.location.state.id)\r\n            setState('editsupplier')\r\n            setTitle('Supplier')\r\n        }\r\n        if (history.location.pathname == \"/addsupplier\") {\r\n            // getCustomer(history.location.state.id)\r\n            setState('addsupplier')\r\n            setTitle('Supplier')\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    const checkApiCall = () => {\r\n        setOpen(false)\r\n        if (state == \"addcustomer\")\r\n            addCustomer()\r\n        else if (state == \"editcustomer\")\r\n            editCustomer()\r\n        else if (state == \"editsupplier\")\r\n            editSupplier()\r\n        else if (state == \"addsupplier\")\r\n            addSupplier()\r\n\r\n    }\r\n\r\n    const addCustomer = async () => {\r\n        if (firstName == '' || contact == '') {\r\n            setOpen(true)\r\n            return\r\n        }\r\n        const res = await api.post(`customer/add`, {\r\n            customer_name: firstName,\r\n            customer_email: \"user@pos.com\",\r\n            contact_no: contact,\r\n            address,\r\n            previous_balance: PBalance\r\n        });\r\n\r\n        if (res.status === 200) {\r\n            if (!res.data.data) {\r\n                setError(res.data.message)\r\n                setOpen(true)\r\n            } else {\r\n                // alert(JSON.stringify(res.data.data))\r\n                history.push(\"/customerlist\");\r\n            }\r\n\r\n            // this.props.history.push(\"/customers\");\r\n        } else {\r\n            throw new Error(\r\n                `Unable to create the record. The status code is ${res.status}`\r\n            );\r\n        }\r\n    }\r\n    const editCustomer = async () => {\r\n        if (firstName == '' || contact == '') {\r\n            setOpen(true)\r\n            return\r\n        }\r\n        const res = await api.put(`customer/update/${history.location.state.id}`, {\r\n            customer_name: firstName,\r\n            customer_email: email,\r\n            contact_no: contact,\r\n            address,\r\n            previous_balance: PBalance\r\n        });\r\n        // alert(JSON.stringify(res.data))\r\n\r\n        if (res.status === 200) {\r\n            alert(JSON.stringify(res.data))\r\n            // history.push(\"/customerlist\");\r\n\r\n            // this.props.history.push(\"/customers\");\r\n        } else {\r\n            throw new Error(\r\n                `Unable to create the record. The status code is ${res.status}`\r\n            );\r\n        }\r\n    }\r\n    const addSupplier = async () => {\r\n        // alert('i am at add supplier')\r\n        if (firstName == '' || contact == '') {\r\n            setOpen(true)\r\n\r\n            return\r\n        }\r\n        const res = await api.post(`supplier/add`, {\r\n            supplier_name: firstName,\r\n            supplier_email: null,\r\n            contact_no: contact,\r\n            address,\r\n            previous_balance: PBalance\r\n        });\r\n\r\n        if (res.status === 200) {\r\n            if (!res.data.data) {\r\n                setError(res.data.message)\r\n                setOpen(true)\r\n            } else {\r\n                // alert(JSON.stringify(res.data.data))\r\n                // history.push(\"/customerlist\");\r\n                history.push(\"/supplierlist\");\r\n            }\r\n            // alert(\"Saved successfully\");\r\n            // alert(JSON.stringify(res.data))\r\n        } else {\r\n            throw new Error(\r\n                `Unable to create the record. The status code is ${res.status}`\r\n            );\r\n        }\r\n    }\r\n    const editSupplier = async () => {\r\n\r\n        if (firstName == '' || contact == '') {\r\n            setOpen(true)\r\n\r\n            return\r\n        }\r\n        alert(PBalance)\r\n        const res = await api.put(`supplier/update/${history.location.state.id}`, {\r\n            supplier_name: firstName,\r\n            supplier_email: email,\r\n            contact_no: contact,\r\n            address,\r\n            previous_balance: PBalance\r\n        });\r\n        // alert(JSON.stringify(res.data))\r\n\r\n        if (res.status === 200) {\r\n            history.push(\"/supplierlist\");\r\n\r\n            // this.props.history.push(\"/customers\");\r\n        } else {\r\n            throw new Error(\r\n                `Unable to create the record. The status code is ${res.status}`\r\n            );\r\n        }\r\n    }\r\n    setTimeout(() => {\r\n        setOpen(false)\r\n        // alert('called')\r\n    }, 5000);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                open &&\r\n\r\n                <Toast open={true} title={error} type='error' />\r\n            }\r\n            <Grid container xs={12} style={{ padding: '0 250px 0 200px', marginTop: 50 }}>\r\n                {/* <form onSubmit > */}\r\n\r\n                <TextField\r\n                    required\r\n                    id=\"firstName\"\r\n                    name=\"firstName\"\r\n                    label=\"First name\"\r\n                    placeholder={`${title} Name`}\r\n                    autoComplete=\"given-name\"\r\n                    variant=\"filled\"\r\n                    value={firstName}\r\n                    title={`${title} Name`}\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                    style={{ height: 35, marginBottom: 10 }}\r\n                // style={{ borderWidth: 0.1, width: '100%', height: 35 }}\r\n                />\r\n\r\n\r\n                {/* <TextField\r\n                    // required\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    placeholder={`${title} Email`}\r\n                    value={email}\r\n                    title={`${title} Email`}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    style={{ height: 35, marginBottom: 10 }}\r\n                /> */}\r\n                <TextField\r\n                    required\r\n                    id=\"contact\"\r\n                    name=\"contact\"\r\n\r\n\r\n                    title={`${title} Mobile`}\r\n                    placeholder={`${title} Mobile`}\r\n                    value={contact}\r\n                    onChange={(e) => setContact(e.target.value)}\r\n                    style={{ height: 35, marginBottom: 10 }}\r\n\r\n                />\r\n\r\n\r\n                <TextField\r\n                    // required\r\n                    id=\"address1\"\r\n                    name=\"address1\"\r\n                    title={`${title} Address`}\r\n                    placeholder={`${title} Address`}\r\n                    type=\"textarea\"\r\n                    // style={{ marginBottom: 20 }}\r\n                    value={address}\r\n                    onChange={(e) => setAddress(e.target.value)}\r\n                    style={{ height: 35, marginBottom: 50 }}\r\n                />\r\n\r\n\r\n\r\n                <TextField\r\n                    // required\r\n                    id=\"PBalance\"\r\n                    name=\"PBalance\"\r\n                    title=\"Previous Balance\"\r\n                    placeholder=\"Previous Balance\"\r\n                    value={PBalance}\r\n                    onChange={(e) => setPBalance(e.target.value)}\r\n                    style={{ height: 35, marginBottom: 10 }}\r\n\r\n                />\r\n\r\n\r\n\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        // color=\"primary\"\r\n                        size=\"small\"\r\n                        className={classes.button}\r\n                        // startIcon={<SaveIcon />}\r\n                        onClick={() => checkApiCall()}\r\n                        style={{ backgroundColor: '#003366', color: 'white' }}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                </Grid>\r\n\r\n\r\n                {/* </form> */}\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Form from './form';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\n\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        position: 'relative',\r\n        backgroundColor: 'white',\r\n        color: 'black'\r\n    },\r\n    layout: {\r\n        width: 'auto',\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n            width: 600,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(3),\r\n        padding: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n            marginTop: theme.spacing(6),\r\n            marginBottom: theme.spacing(6),\r\n            padding: theme.spacing(3),\r\n        },\r\n    },\r\n    stepper: {\r\n        padding: theme.spacing(3, 0, 5),\r\n    },\r\n    buttons: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\nexport default function Checkout() {\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const history = useHistory()\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n\r\n            <AppBar position=\"absolute\" className={classes.appBar} >\r\n                <Toolbar>\r\n                    <Grid xs={9}>\r\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n\r\n                            {history.location.pathname == '/addcustomer' && \"Add Customer\"}\r\n                            {history.location.pathname == '/editcustomer' && \"Edit Customer\"}\r\n                            {history.location.pathname == '/editsupplier' && \"Edit Supplier\"}\r\n                            {history.location.pathname == '/addsupplier' && \"Add Supplier\"}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Breadcrumbs aria-label=\"breadcrumb\" style={{ float: 'right' }}>\r\n                        <Link color=\"inherit\" href=\"/\" >\r\n                            Dashboard\r\n                        </Link>\r\n\r\n                        <Typography color=\"textPrimary\">Add Customer</Typography>\r\n                    </Breadcrumbs>\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Form />\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react'\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport search from '../functions/search'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        position: 'relative',\r\n        backgroundColor: 'white',\r\n        color: 'black'\r\n    },\r\n\r\n}));\r\nexport default function AppBarComponent(props) {\r\n    const classes = useStyles();\r\n\r\n\r\n    const searchQuery = (query) => {\r\n        props.setDataForSearch(search(query, props.data, props.from))\r\n        // alert(search(query, props.data, props.from).length)\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <AppBar position=\"absolute\" className={classes.appBar} >\r\n                <Toolbar>\r\n                    <Grid xs={6}>\r\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n\r\n                            {props.title}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid xs={3}>\r\n                        <input type='text' onChange={e => searchQuery(e.target.value)} placeholder=\"Search\" />\r\n                    </Grid>\r\n                    <Breadcrumbs aria-label=\"breadcrumb\" style={{ float: 'right' }}>\r\n                        <Link color=\"inherit\" href=\"/\" >\r\n                            {props.link1}\r\n                        </Link>\r\n                        <Typography color=\"textPrimary\">\r\n                            {props.link2}\r\n                        </Typography>\r\n                    </Breadcrumbs>\r\n                    {\r\n                        props.isButton &&\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            className={classes.button}\r\n                            // startIcon={<SaveIcon />}\r\n                            onClick={props.onClick}\r\n                        >\r\n                            Add Payment\r\n                        </Button>\r\n                    }\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","export default function searchTailor(query, data, from) {\r\n    // alert(from)\r\n    // alert(JSON.stringify(data))\r\n\r\n    var re = new RegExp(query.toUpperCase(), 'g');\r\n    var temp1 = []\r\n    if (from == 'stock') {\r\n        // alert('in stock')\r\n        data.map((x) => {\r\n            if (x.product_name.toUpperCase().match(re) != null || x.supplier_name.toUpperCase().match(re) != null || x.buy_date.toUpperCase().match(re) != null) {\r\n                temp1.push(x)\r\n            }\r\n        })\r\n    }\r\n    if (from == 'supplier' || from == 'customer') {\r\n        // alert('in customer')\r\n        data.map((x) => {\r\n            let name = x.supplier_name ? x.supplier_name : x.customer_name\r\n            // alert(name)\r\n            if (x.address.toUpperCase().match(re) != null || name.toUpperCase().match(re) != null) {\r\n                // alert('hewre')\r\n                temp1.push(x)\r\n            }\r\n        })\r\n    }\r\n    if (from == 'cat') {\r\n        // alert(JSON.stringify(data))\r\n        data.map((x) => {\r\n\r\n            // alert(name)\r\n            if (x.barcode.toUpperCase().match(re) != null || x.product_name.toUpperCase().match(re) != null || x.category.toUpperCase().match(re) != null || x.details.toUpperCase().match(re) != null) {\r\n                // alert('hewre')\r\n                temp1.push(x)\r\n            }\r\n        })\r\n    }\r\n    if (from == 'invoice') {\r\n        // alert(JSON.stringify(data))\r\n        data.map((x) => {\r\n\r\n            // alert(name)\r\n            if (x.customer_name.toUpperCase().match(re) != null || x.date.toUpperCase().match(re) != null) {\r\n                // alert('hewre')\r\n                temp1.push(x)\r\n            }\r\n        })\r\n    }\r\n    if (from == 'paymentlist') {\r\n        // alert(JSON.stringify(data))\r\n        data.map((x) => {\r\n            let name = x.supplier_name ? x.supplier_name : x.customer_name\r\n            // alert(name)\r\n            if (x.from.toUpperCase().match(re) != null || x.date.toUpperCase().match(re) != null || name.toUpperCase().match(re) != null || x.details.toUpperCase().match(re) != null) {\r\n                // alert('hewre')\r\n                temp1.push(x)\r\n            }\r\n        })\r\n    }\r\n    return temp1\r\n}","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport api from '../../api/api';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Alert from '../Toast/toast'\r\nimport Bar from '../AppBar/AppBarComponent'\r\nimport { isAdmin } from '../../helpers/isAuthenticated'\r\n\r\n\r\n\r\nfunction createData(Id, Name, Address, Contact, PreviousBalnce, Action) {\r\n    return { Id, Name, Address, Contact, PreviousBalnce, Action };\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n    const history = useHistory()\r\n    const classes = useStyles();\r\n\r\n    const [itemToDelete, setItemToDelete] = React.useState('');\r\n    const [userData, setUserData] = React.useState('');\r\n    const [allData, setAllData] = React.useState([]);\r\n    const [rows, setRows] = React.useState([]);\r\n    const [Loading, setLoading] = React.useState(false);\r\n\r\n\r\n    const [openDialog, setOpenDialog] = React.useState(false);\r\n    const handleDialog = () => {\r\n        setOpenDialog(!openDialog)\r\n    }\r\n\r\n\r\n\r\n\r\n    const get_all_customers = async () => {\r\n        try {\r\n\r\n            const res = await api.get('customer/get_all');\r\n            // alert(JSON.stringify(res.data.data))\r\n            if (res.data.data) {\r\n                // alert(JSON.stringify(res.data.data))\r\n                var temp = []\r\n                res.data.data.map(item =>\r\n                    temp.push(createData(item._id, item.customer_name, item.address, item.contact_no, item.previous_balance))\r\n\r\n                )\r\n                setRows(temp)\r\n                setAllData(res.data.data)\r\n                setLoading(false)\r\n                // alert(JSON.stringify(rows))\r\n\r\n\r\n            }\r\n            setUserData(res.data.data)\r\n        } catch (error) {\r\n            alert(error)\r\n        }\r\n    }\r\n    const get_all_suppliers = async () => {\r\n        // alert('working')\r\n        try {\r\n\r\n            const res = await api.get('supplier/get_all');\r\n            // alert(JSON.stringify(res.data.data))\r\n            if (typeof res.data.data == 'undefined')\r\n\r\n                setUserData([])\r\n            else {\r\n                // alert('here')\r\n                let temp = []\r\n                res.data.data.map(item =>\r\n                    temp.push(createData(item._id, item.supplier_name, item.address, item.contact_no, item.previous_balance))\r\n\r\n                )\r\n                setRows(temp)\r\n                setAllData(res.data.data)\r\n                setLoading(false)\r\n                // alert(JSON.stringify(rows))\r\n\r\n\r\n            }\r\n            setUserData(res.data.data)\r\n        } catch (error) {\r\n            alert(error)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        // alert(history.location.pathname)\r\n        setLoading(true)\r\n        if (history.location.pathname == '/customerlist')\r\n            get_all_customers()\r\n        else if (history.location.pathname == '/supplierlist')\r\n            get_all_suppliers()\r\n        else if (history.location.pathname == '/')\r\n            get_all_customers()\r\n    }, [])\r\n\r\n    const DeleteItem = async () => {\r\n        var res = null;\r\n        if (history.location.pathname == '/customerlist')\r\n            res = await api.delete(`customer/delete/${itemToDelete}`)\r\n        if (history.location.pathname == '/supplierlist')\r\n            res = await api.delete(`supplier/delete/${itemToDelete}`)\r\n        // alert(res.data)\r\n        handleDialog()\r\n        window.location.reload()\r\n    }\r\n\r\n\r\n    const setDataForSearch = (data) => {\r\n        // alert(JSON.stringify(data.length))\r\n        let temp = []\r\n        data.map(item =>\r\n            temp.push(createData(item._id, item.customer_name ? item.customer_name : item.supplier_name, item.address, item.contact_no, item.previous_balance))\r\n        )\r\n        setRows(temp)\r\n    }\r\n\r\n    return (<>\r\n        <Bar title={(history.location.pathname == '/customerlist') ? \"Customer\" : \"Supplier\"} link1=\"Dashboard\" link2=\"Stock List\" data={allData} setDataForSearch={setDataForSearch} from='customer' />\r\n        {/* <p style={{ fontSize: 18, marginLeft: 10, }}>Manage {(history.location.pathname == '/customerlist') ? \"Customer\" : \"Supplier\"}</p>\r\n        <Divider /> */}\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                <Alert />\r\n\r\n\r\n\r\n\r\n                {Loading ? <CircularProgress className=\"text-center\" /> :\r\n                    <TableContainer component={Paper}>\r\n                        <Table className={classes.table} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Id</TableCell>\r\n                                    <TableCell>Name</TableCell>\r\n                                    <TableCell>Address</TableCell>\r\n                                    <TableCell>Contact Number</TableCell>\r\n                                    <TableCell>Previous Balance</TableCell>\r\n\r\n                                    <TableCell>Actions</TableCell>\r\n\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows.map((row, index) => (\r\n\r\n                                    <TableRow key={row.Name}>\r\n                                        {/* {console.log(row.name)} */}\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {index + 1011}\r\n                                        </TableCell>\r\n                                        <TableCell >\r\n                                            <a href={`/detail?type=${history.location.pathname == '/customerlist' ? \"customer\" : \"supplier\"}&id=${row.Id}`} style={{ textDecoration: 'none' }}>{row.Name}</a>\r\n                                        </TableCell>\r\n                                        <TableCell >{row.Address}</TableCell>\r\n                                        <TableCell >{row.Contact}</TableCell>\r\n                                        <TableCell >{row.PreviousBalnce}</TableCell>\r\n                                        <TableCell >\r\n                                            {\r\n                                                isAdmin() &&\r\n                                                <>\r\n\r\n                                                    {/* <span onClick={() => history.push({ pathname: 'editcustomer', state: { id: row.Id } })}> */}\r\n                                                    <span onClick={() => history.push({ pathname: history.location.pathname == '/customerlist' ? 'editcustomer' : 'editsupplier', state: { id: row.Id } })}>\r\n                                                        <EditIcon style={{ color: '#003366', cursor: 'pointer' }} />\r\n                                                    </span>\r\n                                                    <span\r\n                                                        onClick={() => {\r\n                                                            handleDialog();\r\n                                                            setItemToDelete(row.Id)\r\n                                                        }}\r\n                                                    >\r\n                                                        <DeleteIcon style={{ color: 'red', marginLeft: 10, cursor: 'pointer' }} />\r\n                                                    </span>\r\n                                                </>\r\n                                            }\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                }\r\n            </Paper>\r\n\r\n            <Dialog\r\n                open={openDialog}\r\n                onClose={handleDialog}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Are you sure to delete?\"}</DialogTitle>\r\n\r\n                <DialogActions>\r\n                    <Button onClick={handleDialog} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={DeleteItem} style={{ color: 'red' }} autoFocus>\r\n                        Yes\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    </>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport api from '../../api/api';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Bar from '../AppBar/AppBarComponent'\r\nimport { isAdmin } from '../../helpers/isAuthenticated'\r\n\r\n\r\nfunction createData(Id, Product_Name, Supplier_Name, Buy_Date, Product_Per_Carton, Quantity, Buy_Price, Sale_Price, Action) {\r\n    // alert('pushed to rows')\r\n    return { Id, Product_Name, Supplier_Name, Buy_Date, Product_Per_Carton, Quantity, Buy_Price, Sale_Price, Action };\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n    const history = useHistory()\r\n    const classes = useStyles();\r\n    const [rows, setRows] = useState([])\r\n    const [allStock, setAllStock] = useState([])\r\n\r\n    const [openDialog, setOpenDialog] = React.useState(false);\r\n    const [itemToDelete, setItemToDelete] = React.useState('');\r\n    const handleDialog = () => {\r\n        setOpenDialog(!openDialog)\r\n    }\r\n\r\n    const DeleteItem = async () => {\r\n        var res = null;\r\n        res = await api.delete(`stock/delete/${itemToDelete}`)\r\n        handleDialog()\r\n        window.location.reload()\r\n    }\r\n    const get_all_stocks = async () => {\r\n        try {\r\n\r\n            const res = await api.get('stock/get_all');\r\n            // alert(JSON.stringify(res.data.data[0].paid_amount))\r\n            var temp = []\r\n            if (res.status == 200)\r\n                res.data.data.map(item =>\r\n                    temp.push(createData(item._id, item.product_name, item.supplier_name, item.buy_date, item.product_per_carton, item.quantity, item.buy_price, item.sale_price))\r\n                )\r\n            setRows(temp)\r\n            setAllStock(res.data.data)\r\n            // alert(\"i am row\" + JSON.stringify(rows))\r\n        } catch (error) {\r\n            // alert(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        get_all_stocks()\r\n    }, [])\r\n\r\n\r\n    const setDataForSearch = (data) => {\r\n        var temp = []\r\n        data.map(item =>\r\n            temp.push(createData(item._id, item.product_name, item.supplier_name, item.buy_date, item.product_per_carton, item.quantity, item.buy_price, item.sale_price))\r\n        )\r\n        setRows(temp)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Bar title=\"Stocks\" link1=\"Dashboard\" link2=\"Stock List\" data={allStock} setDataForSearch={setDataForSearch} from='stock' />\r\n            <div className={classes.root}>\r\n\r\n                <Paper className={classes.paper}>\r\n\r\n\r\n\r\n                    <TableContainer component={Paper}>\r\n                        <Table className={classes.table} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Id</TableCell>\r\n                                    <TableCell>Product Name</TableCell>\r\n                                    <TableCell>Supplier Name</TableCell>\r\n                                    <TableCell>Buy Date</TableCell>\r\n                                    <TableCell>Product per Carton</TableCell>\r\n                                    <TableCell>Quantity</TableCell>\r\n                                    <TableCell>Buy Price</TableCell>\r\n                                    <TableCell>Sale Price</TableCell>\r\n                                    <TableCell>Actions</TableCell>\r\n\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows.map((row, index) => (\r\n                                    <TableRow key={row.name}>\r\n\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {index + 1011}\r\n                                        </TableCell>\r\n                                        <TableCell >{row.Product_Name}</TableCell>\r\n                                        <TableCell >{row.Supplier_Name}</TableCell>\r\n                                        <TableCell >{row.Buy_Date.split('T')[0]}</TableCell>\r\n                                        <TableCell >{row.Product_Per_Carton}</TableCell>\r\n                                        <TableCell >{row.Quantity}</TableCell>\r\n                                        <TableCell >{row.Buy_Price}</TableCell>\r\n                                        <TableCell >{row.Sale_Price}</TableCell>\r\n                                        <TableCell >\r\n                                            {\r\n                                                isAdmin() && <>\r\n\r\n                                                    {/* <span onClick={() => history.push({ pathname: 'editcustomer', state: { id: row.Id } })}> */}\r\n                                                    <span onClick={() => history.push({ pathname: 'editstock', state: { id: row.Id } })}>\r\n                                                        <EditIcon style={{ color: '#003366', cursor: 'pointer' }} />\r\n                                                    </span>\r\n                                                    <span\r\n                                                        onClick={() => {\r\n                                                            handleDialog();\r\n                                                            setItemToDelete(row.Id)\r\n                                                        }}\r\n                                                    >\r\n                                                        <DeleteIcon style={{ color: 'red', marginLeft: 10, cursor: 'pointer' }} />\r\n                                                    </span>\r\n                                                </>\r\n                                            }\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n\r\n                </Paper>\r\n\r\n                <Dialog\r\n                    open={openDialog}\r\n                    onClose={handleDialog}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"Are you sure to delete?\"}</DialogTitle>\r\n\r\n                    <DialogActions>\r\n                        <Button onClick={handleDialog} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={DeleteItem} style={{ color: 'red' }} autoFocus>\r\n                            Yes\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '../Form/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport PeopleIcon from '@material-ui/icons/People'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport KeyboardVoiceIcon from '@material-ui/icons/KeyboardVoice';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useHistory } from 'react-router-dom';\r\nimport api from '../../api/api';\r\n// import {Navigate}\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\nexport default function Form() {\r\n    const history = useHistory()\r\n    const classes = useStyles();\r\n    const [prodcutName, setProductName] = useState('')\r\n    const [supplierName, setSupplierName] = useState('')\r\n    const [CName, setCName] = useState('');\r\n    const [buyDate, setBuyDate] = useState(new Date())\r\n    const [productPerCarton, setProductPerCarton] = useState('')\r\n    const [quantity, setQuantity] = useState('')\r\n    const [buyPrice, setBuyPrice] = useState('')\r\n    const [salePrice, setSalePrice] = useState('')\r\n    const [paidAmount, setPaidAmount] = useState('')\r\n    const [AllSupliers, setAllSupliers] = useState([])\r\n\r\n\r\n\r\n    useEffect(async () => {\r\n        if (history.location.pathname == '/editstock')\r\n            getStock(history.location.state.id)\r\n\r\n        const res1 = await api.get(\"supplier/get_all\")\r\n        if (res1.data.data)\r\n            setAllSupliers(res1.data.data)\r\n    }, [])\r\n\r\n    const getStock = async (id) => {\r\n        try {\r\n            const res = await api.get(`stock/get/${id}`)\r\n            const data = res.data.data\r\n            setProductName(data.product_name)\r\n            setSupplierName(data.supplier_name)\r\n            setBuyDate(data.buy_date)\r\n            setProductPerCarton(data.product_per_carton)\r\n            setQuantity(data.quantity)\r\n            setBuyPrice(data.buy_price)\r\n            setSalePrice(data.sale_price)\r\n\r\n\r\n            // alert(JSON.stringify(res.data.data.customer_name))\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n    const checkApiCall = () => {\r\n        if (history.location.pathname == '/addstock')\r\n            addStock()\r\n        else\r\n            editStock()\r\n\r\n    }\r\n\r\n    const addStock = async () => {\r\n        const res = await api.post(`stock/add`, {\r\n            product_name: prodcutName,\r\n            supplier_name: supplierName,\r\n            buy_date: buyDate,\r\n            product_per_carton: productPerCarton,\r\n            quantity,\r\n            buy_price: buyPrice,\r\n            sale_price: salePrice,\r\n            paid_amount: paidAmount\r\n\r\n        });\r\n\r\n        if (res.status === 200) {\r\n            // alert(\"Saved successfully\");\r\n            alert(JSON.stringify(res.data.message))\r\n            history.push(\"/stocklist\");\r\n        } else {\r\n            throw new Error(\r\n                `Unable to create the record. The status code is ${res.status}`\r\n            );\r\n        }\r\n    }\r\n    const editStock = async () => {\r\n        const res = await api.put(`stock/update/${history.location.state.id}`, {\r\n            // const res = await api.post(`stock/add`, {\r\n            product_name: prodcutName,\r\n            supplier_name: supplierName,\r\n            buy_date: buyDate,\r\n            product_per_carton: productPerCarton,\r\n            quantity,\r\n            buy_price: buyPrice,\r\n            sale_price: salePrice,\r\n\r\n        });\r\n\r\n        if (res.status === 200) {\r\n            alert(\"Saved successfully\");\r\n            // alert(JSON.stringify(res.data))\r\n            this.props.history.push(\"/stocklist\");\r\n        } else {\r\n            throw new Error(\r\n                `Unable to create the record. The status code is ${res.status}`\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <Grid container xs={12} style={{ padding: '0 250px 0 200px', marginTop: 50 }}>\r\n                {/* <form onSubmit > */}\r\n\r\n                {/* <Grid item xs={12} > */}\r\n                <TextField\r\n                    required\r\n                    id=\"productname\"\r\n                    name=\"productname\"\r\n                    label=\"Product Name\"\r\n                    fullWidth\r\n                    title='Product Name'\r\n                    placeholder='Product Name'\r\n                    autoComplete=\"given-name\"\r\n                    variant=\"filled\"\r\n                    value={prodcutName}\r\n                    style={{ height: 35, marginBottom: 10 }}\r\n                    onChange={(e) => setProductName(e.target.value)}\r\n                />\r\n\r\n                {/* </Grid> */}\r\n                {/* <Grid item xs={12} sm={6}> */}\r\n                {/* <TextField\r\n                    required\r\n                    id=\"suppliername\"\r\n                    name=\"suppliername\"\r\n                    title=\"Supplier name\"\r\n                    placeholder=\"Supplier name\"\r\n                    fullWidth\r\n                    autoComplete=\"family-name\"\r\n                    variant=\"filled\"\r\n                    value={supplierName}\r\n                    style={{ height: 35, marginBottom: 10 }}\r\n                    onChange={(e) => setSupplierName(e.target.value)}\r\n                /> */}\r\n\r\n                {/* <Grid container xs={6}> */}\r\n                <Autocomplete\r\n                    id=\"combo-box-demo\"\r\n                    options={AllSupliers}\r\n                    getOptionLabel={(option) => option.supplier_name}\r\n                    style={{ width: '100%', marginBottom: '10px' }}\r\n                    onChange={(e, newValue) => {\r\n                        // alert((newValue.supplier_name))\r\n                        setSupplierName(newValue.supplier_name)\r\n                    }}\r\n                    renderInput={(params) =>\r\n                        <>\r\n                            <div ref={params.InputProps.ref} style={{}}>\r\n                                <Grid container>\r\n                                    <Grid item xs={3}>Supplier Name</Grid>\r\n                                    <Grid item xs={9}>\r\n\r\n                                        <input style={{ height: 35, width:'100%' }} type=\"text\" placeholder='Supplier Name' {...params.inputProps} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                />\r\n                {/* </Grid> */}\r\n                {/* </Grid> */}\r\n                {/* <Grid item xs={12}> */}\r\n                <TextField\r\n                    required\r\n                    id=\"date\"\r\n                    name=\"date\"\r\n                    title=\"Buy Date\"\r\n\r\n                    inputType=\"datetime-local\"\r\n                    // type=\"datetime-local\"\r\n                    autoComplete=\"shipping address-line1\"\r\n                    variant=\"filled\"\r\n                    value={buyDate}\r\n                    style={{ height: 35, marginBottom: 10 }}\r\n                    onChange={(e) => setBuyDate(e.target.value)}\r\n                />\r\n                {/* </Grid> */}\r\n                {/* <Grid item xs={12} sm={6}> */}\r\n                <TextField\r\n                    required\r\n                    id=\"productpercarton\"\r\n                    name=\"productpercarton\"\r\n                    title=\"Product per carton\"\r\n                    placeholder=\"Product per carton\"\r\n                    fullWidth\r\n                    autoComplete=\"shipping address-line2\"\r\n                    variant=\"filled\"\r\n                    value={productPerCarton}\r\n                    style={{ height: 35, marginBottom: 10 }}\r\n                    onChange={(e) => setProductPerCarton(e.target.value)}\r\n                />\r\n                {/* </Grid> */}\r\n\r\n                {/* <Grid item xs={12} sm={6}> */}\r\n                <TextField\r\n                    required\r\n                    id=\"quantity\"\r\n                    name=\"quantity\"\r\n                    title=\"Quantity\"\r\n                    placeholder=\"Quantity\"\r\n                    fullWidth\r\n                    autoComplete=\"shipping postal-code\"\r\n                    variant=\"filled\"\r\n                    value={quantity}\r\n                    onChange={(e) => setQuantity(e.target.value)}\r\n                    style={{ height: 35, marginBottom: 10 }}\r\n                />\r\n                {/* </Grid> */}\r\n                {/* <Grid item xs={12} sm={6}> */}\r\n                <TextField\r\n                    required\r\n                    id=\"buyprice\"\r\n                    name=\"buyprice\"\r\n                    title=\"Buy Price\"\r\n                    placeholder=\"Buy Price\"\r\n                    fullWidth\r\n                    autoComplete=\"shipping postal-code\"\r\n                    variant=\"filled\"\r\n                    value={buyPrice}\r\n                    onChange={(e) => setBuyPrice(e.target.value)}\r\n                    style={{ height: 35, marginBottom: 10 }}\r\n                />\r\n                {/* </Grid> */}\r\n                {/* <Grid item xs={12} sm={6}> */}\r\n                <TextField\r\n                    required\r\n                    id=\"saleprice\"\r\n                    name=\"saleprice\"\r\n                    title=\"Sale Price\"\r\n                    placeholder=\"Sale Price\"\r\n                    fullWidth\r\n                    autoComplete=\"shipping postal-code\"\r\n                    variant=\"filled\"\r\n                    value={salePrice}\r\n                    onChange={(e) => setSalePrice(e.target.value)}\r\n                    style={{ height: 35, marginBottom: 10 }}\r\n                />\r\n                <TextField\r\n                    required\r\n                    id=\"paidamount\"\r\n                    name=\"paidamount\"\r\n                    title=\"Paid Amount\"\r\n                    placeholder=\"Paid Amount\"\r\n                    fullWidth\r\n                    // autoComplete=\"shipping postal-code\"\r\n                    variant=\"filled\"\r\n                    value={paidAmount}\r\n                    onChange={(e) => setPaidAmount(e.target.value)}\r\n                    style={{ height: 35, marginBottom: 10 }}\r\n                />\r\n                {/* </Grid> */}\r\n                <Grid item xs={12} sm={6}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        className={classes.button}\r\n                        // startIcon={<SaveIcon />}\r\n                        onClick={() => checkApiCall()}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                </Grid>\r\n\r\n\r\n                {/* </form> */}\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Form from './form';\r\nimport Bar from '../../Components/AppBar/AppBarComponent'\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        position: 'relative',\r\n        backgroundColor: '#002447',\r\n        color: '#f5f5f5'\r\n    },\r\n    layout: {\r\n        width: 'auto',\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n            width: 600,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(3),\r\n        padding: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n            marginTop: theme.spacing(6),\r\n            marginBottom: theme.spacing(6),\r\n            padding: theme.spacing(3),\r\n        },\r\n    },\r\n    stepper: {\r\n        padding: theme.spacing(3, 0, 5),\r\n    },\r\n    buttons: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\nexport default function Checkout() {\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const history = useHistory()\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <Bar title=\"Add Stock\" link1=\"Dashboard\" link2=\"Add Stock\" />\r\n\r\n            <Form />\r\n\r\n        </React.Fragment>\r\n    );\r\n}","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport { Container, Grid } from '@material-ui/core';\r\nimport ReactToPrint from \"react-to-print\";\r\n\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport Button from '@material-ui/core/Button'\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                color: theme.palette.secondary.main,\r\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            },\r\n    title: {\r\n        flex: '1 1 100%',\r\n    },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles();\r\n\r\n\r\n    return (\r\n        <Toolbar\r\n\r\n        >\r\n            <AppBar position=\"absolute\" className={classes.appBar} style={{ backgroundColor: '#002447' }}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                        Invoice Details\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nfunction DenseTable(props) {\r\n    function createData(si, item, qty, rate, amount) {\r\n        return { si, item, qty, rate, amount };\r\n    }\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n    const [rows, setRows] = useState([])\r\n\r\n    useEffect(() => {\r\n        let temp = [\r\n        ]\r\n        props.data.allItems.map((x, index) => {\r\n            // alert(JSON.stringify(x))\r\n            temp.push(\r\n\r\n                createData(index + 1, x.product_name, x.quantity, x.sale_price, x.total)\r\n            )\r\n        })\r\n        setRows(temp)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {/* {JSON.stringify(props.data.allItems)}\r\n            {console.log(props.data.allItems[0])} */}\r\n            <TableContainer component={Paper}>\r\n                <Grid item xs={12}>\r\n                    <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>SI</TableCell>\r\n                                <TableCell align=\"right\">Item</TableCell>\r\n                                <TableCell align=\"right\">QTY SUTE</TableCell>\r\n                                <TableCell align=\"right\">Rate</TableCell>\r\n                                <TableCell align=\"right\">Amount</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {rows.map((row) => (\r\n                                <TableRow key={row.si}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {row.si}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">{row.item}</TableCell>\r\n                                    <TableCell align=\"right\">{row.qty}</TableCell>\r\n                                    <TableCell align=\"right\">{row.rate}</TableCell>\r\n                                    <TableCell align=\"right\">{row.amount}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Grid>\r\n            </TableContainer>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nclass ComponentToPrint extends React.Component {\r\n    render() {\r\n        var data = this.props.data\r\n        return (\r\n            <Grid container spacing={3} style={{ marginTop: 100 }}>\r\n\r\n\r\n                <Grid item xs={12}  >\r\n                    <div style={{ lineHeight: 0, padding: '0 10px 10px 10px' }}>\r\n                        <div style={{ textAlign: 'center', }}>\r\n                            <p style={{ fontSize: 32, fontWeight: 'bold' }}>Tech Lab</p>\r\n                            <p style={{ fontSize: 18, lineHeight: 1 }}>Uttara</p>\r\n                            <p style={{ fontSize: 18 }}>0171123567</p>\r\n                            <hr style={{ height: 2, border: 'none', backgroundColor: 'black' }} />\r\n                            <p style={{ fontSize: 20, fontWeight: 'bold', lineHeight: 1 }}>IBNUSEENA Medicals Karma dubai</p>\r\n                            <p style={{ fontSize: 18 }}>Karama shopping Complex Karama</p>\r\n                            <p style={{ fontSize: 18, lineHeight: 1 }}>0171123567</p>\r\n                            <p style={{ fontSize: 18 }}>0171123567</p>\r\n                        </div>\r\n                        <p style={{ fontSize: 20, fontWeight: 'bold', lineHeight: 1 }}>Sell No: 1894</p>\r\n                        <DenseTable data={data} />\r\n                        <hr style={{ height: 2, border: 'none', backgroundColor: 'black' }} />\r\n                        <div style={{ height: 20, marginBottom: 16 }}>\r\n\r\n                            <p style={{\r\n                                fontSize: 18,\r\n                                float: 'left',\r\n                                // display: 'inline'\r\n                            }}>Total</p>\r\n                            <p style={{\r\n                                fontSize: 18,\r\n                                float: 'right',\r\n                                // display: 'inline',\r\n\r\n                            }}>{data.grand_total}</p>\r\n                        </div>\r\n\r\n                        <hr style={{ height: 2, border: 'none', backgroundColor: 'black' }} />\r\n                        <div style={{ height: 20, marginBottom: 20 }}>\r\n                            <p style={{ fontSize: 20, fontWeight: 'bold', lineHeight: 0, float: 'left' }}>Total Discount</p>\r\n                            <p style={{ fontSize: 20, fontWeight: 'bold', lineHeight: 0, float: 'right' }}>{data.totalDiscount}</p>\r\n                        </div>\r\n                        <hr style={{ height: 2, border: 'none', backgroundColor: 'black' }} />\r\n                        <div style={{ height: 20, marginBottom: 20 }}>\r\n                            <p style={{ fontSize: 20, fontWeight: 'bold', lineHeight: 0, float: 'left' }}>Grand Total</p>\r\n                            <p style={{ fontSize: 20, fontWeight: 'bold', lineHeight: 0, float: 'right' }}>{(data.grand_total) - data.totalDiscount}</p>\r\n                        </div>\r\n                        <hr style={{ height: 2, border: 'none', backgroundColor: 'black' }} />\r\n                        <div style={{ height: 20, marginBottom: 30 }}>\r\n                            <p style={{ fontSize: 20, fontWeight: 'bold', lineHeight: 0, float: 'left' }}>Due</p>\r\n                            <p style={{ fontSize: 20, fontWeight: 'bold', lineHeight: 0, float: 'right' }}>0</p>\r\n                        </div>\r\n                        <p style={{ fontSize: 20, fontWeight: 'bold', lineHeight: 0 }}>Powered By: Heaven Engineering</p>\r\n\r\n\r\n                    </div>\r\n                </Grid>\r\n\r\n\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default class EnhancedTable extends React.Component {\r\n\r\n    // classes = useStyles();\r\n\r\n    render() {\r\n        // const { name, price, quantity, grand_total } = this.props.history.location.state;\r\n\r\n        return (\r\n            <div\r\n            // className={this.classes.root} \r\n            >\r\n                {/* {JSON.stringify(this.props.history.location.state)} */}\r\n\r\n                <Paper\r\n                // className={this.classes.paper}\r\n                >\r\n\r\n                    <EnhancedTableToolbar />\r\n\r\n                    <Container maxWidth=\"lg\"\r\n                    // className={this.classes.container}\r\n                    >\r\n                        <Grid container spacing={3}>\r\n\r\n                            <Grid item xs={12} md={12} lg={12}>\r\n                                <Paper>\r\n\r\n                                    <div style={{}}>\r\n                                        <ComponentToPrint ref={(el) => (this.componentRef = el)} data={this.props.history.location.state} />\r\n                                        <ReactToPrint\r\n                                            trigger={() =>\r\n                                                <Button\r\n                                                    style={{ marginLeft: 10 }}\r\n                                                    variant=\"contained\"\r\n                                                    color=\"primary\"\r\n                                                    size=\"large\"\r\n                                                    // className={classes.button}\r\n                                                    // startIcon={}\r\n                                                    onClick={() => window.location = '/addstock'}\r\n                                                >\r\n                                                    <PrintIcon />\r\n                                                </Button>}\r\n                                            content={() => this.componentRef}\r\n                                        />\r\n                                    </div>\r\n                                </Paper>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                    </Container>\r\n\r\n\r\n\r\n                </Paper>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { Grid, Link } from '@material-ui/core'\r\nimport React from 'react'\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport CountUp from 'react-countup';\r\n\r\n\r\nexport default function CustomCountCard(props) {\r\n    return (\r\n        <Grid container >\r\n            <Grid item xs={12}>\r\n\r\n                <div style={{ width: '100%', height: 120, borderRadius: 5, backgroundColor: '#FAFAFA' }}>\r\n                    <Grid container style={{ padding: '10px 10px 10px 10px' }}>\r\n                        {props.countCard ?\r\n                            <>\r\n                                {/* <Grid xs={1}></Grid> */}\r\n                                <Grid item xs={12} style={{}}>{props.title}</Grid>\r\n                                <br />\r\n                                <br />\r\n\r\n                                <Grid xs={6}><p style={{ fontSize: 22, fontWeight: 'bold', display: 'inline', overflow: 'auto' }}>\r\n                                    <CountUp\r\n                                        end={props.count}\r\n                                        duration={1}\r\n                                        separator=\",\"\r\n                                        prefix=\"Rs \"\r\n  \r\n                                    />\r\n                                    {/* {props.count} */}\r\n                                </p>\r\n                                    <ArrowDropUpIcon\r\n                                        style={{ marginTop: 10, overflow: 'auto' }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid xs={3}></Grid>\r\n                                <Grid xs={3}>\r\n                                    {props.icon}\r\n                                </Grid>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <Grid item xs={4}></Grid>\r\n                                <Grid item xs={5}>{props.icon}</Grid>\r\n                                <Grid item xs={3}></Grid>\r\n\r\n                                <Grid item xs={3}></Grid>\r\n                                <Grid item xs={9}>\r\n                                    <h3 style={{ color: 'blueviolet' }}>\r\n                                        <Link href={props.link}>\r\n                                            {props.title}\r\n                                        </Link>\r\n                                    </h3>\r\n                                </Grid>\r\n                                {/* <Grid item xs={3}></Grid> */}\r\n\r\n\r\n                            </>\r\n                        }\r\n\r\n                    </Grid>\r\n                </div>\r\n            </Grid>\r\n\r\n        </Grid>\r\n    )\r\n}\r\n","import { AppBar, Container, Grid } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport CountCard from './Components/customCountCard'\r\nimport HomeIcon from '@material-ui/icons/Home'\r\nimport api from '../../api/api'\r\n\r\n\r\nexport default function Home() {\r\n\r\n    const [totalCustomers, setTotalCustomers] = useState(0)\r\n    const [totalSuppliers, setTotalSuppliers] = useState(0)\r\n    const [totalStock, setTotalStock] = useState(0)\r\n    const [totalInvoice, setTotalInvoice] = useState(0)\r\n\r\n    useEffect(async () => {\r\n        var count = 0\r\n        var res = await api.get('supplier/get_all')\r\n        if (res.status == 200){\r\n                let data=res.data.data\r\n                let totalSupBalance=data?.reduce((accumulator, object) => {\r\n                    return accumulator + object.previous_balance;\r\n                  }, 0)\r\n\r\n            setTotalSuppliers(totalSupBalance)\r\n\r\n        }\r\n\r\n        res = null\r\n        res = await api.get('customer/get_all')\r\n        if (res.status == 200){\r\n            let data=res.data.data\r\n                let totalCustomerBalance=data?.reduce((accumulator, object) => {\r\n                    return accumulator + object.previous_balance;\r\n                  }, 0)\r\n\r\n            setTotalCustomers(totalCustomerBalance)\r\n\r\n        }\r\n\r\n        res = null\r\n        res = await api.get('stock/get_all')\r\n        if (res.status == 200){\r\n            let data=res.data.data\r\n            console.log(data)\r\n\r\n                let totalProductAmount=data?.reduce((accumulator, object) => {\r\n                    return accumulator + object.buy_price;\r\n                  }, 0)\r\n            setTotalStock(totalProductAmount)\r\n\r\n        }\r\n\r\n        res = null\r\n        res = await api.get('invoice/get_all')\r\n        if (res.status == 200)\r\n            setTotalInvoice(res.data.data.length)\r\n\r\n\r\n    }, [])\r\n    return (\r\n        <>\r\n            <AppBar>hello</AppBar>\r\n            <Container>\r\n\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} md={6} lg={3} ><CountCard countCard={true} title=\"Total Customer Amount\" count={totalCustomers} icon={<img src=\"./images/customer.png\" width={60} />} /></Grid>\r\n                    <Grid item xs={12} md={6} lg={3} ><CountCard countCard={true} title=\"Total Product Amount\" count={totalStock} icon={<img src=\"./images/products-icon-3.png\" width={60} />} /></Grid>\r\n                    <Grid item xs={12} md={6} lg={3} ><CountCard countCard={true} title=\"Total Supplier Amount\" count={totalSuppliers} icon={<img src=\"./images/supplier.png\" width={60} />} /></Grid>\r\n                    <Grid item xs={12} md={6} lg={3} ><CountCard countCard={true} title=\"Cycle Amount\" count={(totalCustomers+totalStock)-totalSuppliers} icon={<img src=\"./images/invoice.png\" width={60} />} /></Grid>\r\n\r\n                    <Grid item xs={12} md={6} lg={3} ><CountCard link='/invoice' title=\"Create POS Invoice\" icon={<img src=\"./images/pos_invoice.png\" width={40} />} /></Grid>\r\n                    <Grid item xs={12} md={6} lg={3} ><CountCard link='/addstock' title=\"Add Product\" icon={<img src=\"./images/product.png\" width={40} />} /></Grid>\r\n                    <Grid item xs={12} md={6} lg={3} ><CountCard link='/addcustomer' title=\"Add Customer\" icon={<img src=\"./images/add_customer.png\" width={40} />} /></Grid>\r\n                    <Grid item xs={12} md={6} lg={3} ><CountCard link='/addsupplier' title=\"Add Supplier\" icon={<img src=\"./images/supplier.png\" width={60} />} /></Grid>\r\n\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n","import { AppBar, Button, Container, Divider, Grid } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport TextField from '../Form/TextField'\r\nimport InputField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport api from '../../api/api';\r\nimport Toast from '../Toast/toast'\r\nimport { useHistory } from 'react-router';\r\n\r\nexport default function AddInvoice() {\r\n    const [allProducts, setAllProducts] = useState([])\r\n    const [allCustomers, setAllCustomers] = useState([])\r\n    const [selectedProduct, setSelectedProduct] = useState([])\r\n    const [CName, setCName] = useState('');\r\n    const [date, setDate] = useState(null);\r\n    const [PName, setPName] = useState('');\r\n    const [selectedCartons, setSelectedCartons] = useState(1)\r\n    const [price, setPrice] = useState(null)\r\n    const [discount, setDiscount] = useState(0)\r\n    const [total, setTotal] = useState(selectedCartons * price)\r\n    const [toast, setToast] = useState(false)\r\n    const [title, setTitle] = useState('')\r\n    const [type, setType] = useState('success')\r\n    const [allItems, setAllItems] = useState([{ id: 1 }])\r\n    const [paidAmount, setPaidAmount] = useState(0)\r\n    const [grandTotal, setGrandTotal] = useState(0)\r\n    const [totalDiscount, setTotalDiscount] = useState(0)\r\n    const history = useHistory()\r\n\r\n    useEffect(async () => {\r\n        const res = await api.get('stock/get_all')\r\n        if (res.data.data)\r\n            setAllProducts(res.data.data)\r\n        const res1 = await api.get(\"customer/get_all\")\r\n        if (res1.data.data)\r\n            setAllCustomers(res1.data.data)\r\n    }, [])\r\n    const addItem = () => {\r\n        setAllItems(\r\n            [\r\n                ...allItems,\r\n                {\r\n                    product_id: selectedProduct._id,\r\n                    product_name: selectedProduct.product_name,\r\n                    carton: selectedCartons,\r\n                    sale_price: price,\r\n                    selectedProduct: selectedProduct.quantity,\r\n                    item: selectedProduct.product_per_carton,\r\n                    quantity: selectedCartons,\r\n                    price,\r\n                    total: total - discount,\r\n                    discount\r\n                }\r\n            ]\r\n        )\r\n        setSelectedProduct([])\r\n        setSelectedCartons(1)\r\n        setPrice(null)\r\n        setTotal(0)\r\n        setDiscount(0)\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        let temp = []\r\n        allItems.map((item, index) => {\r\n            if (index != 0) {\r\n                temp.push({\r\n                    product_id: item.product_id,\r\n                    product_name: item.product_name,\r\n                    quantity: item.quantity,\r\n                    sale_price: item.sale_price,\r\n                })\r\n            }\r\n        })\r\n        temp.push({\r\n            product_id: selectedProduct._id,\r\n            product_name: selectedProduct.product_name,\r\n            quantity: selectedCartons,\r\n            sale_price: price\r\n        })\r\n        try {\r\n            const res = await api.post('invoice/add', {\r\n                customer_name: CName,\r\n                date,\r\n                products: temp,\r\n                grand_total: grandTotal - totalDiscount,\r\n                paid_amount: paidAmount\r\n            })\r\n            if (res.data.data) {\r\n\r\n                setToast(false)\r\n                setToast(true)\r\n                setType('success')\r\n                setTitle('Added Succesfully')\r\n                // let temp = allItems\r\n                // temp.splice(0, 1)\r\n                let temp = []\r\n                allItems.map((item, index) => {\r\n                    if (index != 0) {\r\n                        temp.push({\r\n                            product_id: item.product_id,\r\n                            product_name: item.product_name,\r\n                            quantity: item.quantity,\r\n                            sale_price: item.sale_price,\r\n                            total: item.total,\r\n                            discount: item.discount\r\n                        })\r\n                    }\r\n                })\r\n                temp.push({\r\n                    product_id: selectedProduct._id,\r\n                    product_name: selectedProduct.product_name,\r\n                    quantity: selectedCartons,\r\n                    sale_price: price,\r\n                    total: total - discount,\r\n                    discount\r\n                })\r\n\r\n                history.push({ pathname: '/printinvoice', state: { allItems: temp, grand_total: grandTotal, totalDiscount } })\r\n            }\r\n            else {\r\n\r\n                setToast(false)\r\n                setToast(true)\r\n                setType('error')\r\n                setTitle(res.data.message)\r\n\r\n            }\r\n        } catch (error) {\r\n            // alert('i')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <>\r\n            {/* {JSON.stringify(allItems)} */}\r\n            {/* {JSON.stringify(allItems.length)} */}\r\n            {/* {console.log(allItems)} */}\r\n            {/* yahan {JSON.stringify(allItems[1]?.products[0]?.quantity)} */}\r\n\r\n            {toast &&\r\n\r\n                <Toast open={true} title={title} type={type} />\r\n            }\r\n            <Container style={{ padding: '10px 10px 10px 10px' }}>\r\n                <p style={{ fontSize: 18 }}>Add new Invoice</p>\r\n                <Divider />\r\n\r\n                <Grid container xs={12}>\r\n\r\n                    <Grid container xs={6}>\r\n                        <Autocomplete\r\n                            id=\"combo-box-demo\"\r\n                            options={allCustomers}\r\n                            getOptionLabel={(option) => option.customer_name}\r\n                            // style={{ marginTop: 10 }}\r\n                            onChange={(e, newValue) => {\r\n                                // alert((newValue.customer_name))\r\n                                setCName(newValue.customer_name)\r\n                            }}\r\n                            renderInput={(params) =>\r\n                                <>\r\n                                    <div ref={params.InputProps.ref} style={{}}>\r\n                                        Customer Name\r\n                                        <input style={{ height: 35, marginLeft: 48, width: 453 }} type=\"text\" placeholder='Customer Name' {...params.inputProps} />\r\n                                    </div>\r\n                                </>\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                    <Grid container xs={6}>\r\n\r\n                        <Button onClick={() => history.push('/addcustomer')}>New Customer</Button>\r\n                    </Grid>\r\n\r\n\r\n\r\n                    <Grid container xs={6}>\r\n\r\n                        <TextField\r\n                            required\r\n                            id=\"date\"\r\n                            name=\"date\"\r\n                            label=\"Date\"\r\n                            fullWidth\r\n                            title='Date'\r\n                            placeholder='Date'\r\n                            autoComplete=\"given-name\"\r\n                            variant=\"filled\"\r\n                            style={{ height: 35, marginBottom: 10 }}\r\n                            inputType='date'\r\n                            onChange={(e) => setDate(e.target.value)}\r\n                        />\r\n                    </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </Grid>\r\n                <form xs={12} onSubmit={(e) => handleSubmit(e)}>\r\n\r\n                    <table class=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">Item Information</th>\r\n                                <th scope=\"col\">Available Ctn.</th>\r\n                                <th scope=\"col\">Carton</th>\r\n                                <th scope=\"col\">Item</th>\r\n                                <th scope=\"col\">Quantity</th>\r\n                                <th scope=\"col\">Rate</th>\r\n                                <th scope=\"col\">Discount/Pcs.</th>\r\n                                <th scope=\"col\">Total</th>\r\n                                <th scope=\"col\">Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {allItems.map((item, index) =>\r\n                                <tr>\r\n\r\n                                    <td style={{ width: '20%' }}>\r\n                                        <Autocomplete\r\n                                            id=\"combo-box-demo\"\r\n                                            options={allProducts}\r\n                                            getOptionLabel={(option) => option.product_name}\r\n                                            // style={{ marginTop: 10 }}\r\n                                            onChange={(e, newValue) => {\r\n                                                setSelectedProduct(newValue)\r\n                                                setPrice(newValue ? newValue.sale_price : 0)\r\n                                                let total = 0\r\n                                                allItems.map((item, index) => {\r\n                                                    if (index != 0)\r\n                                                        total += item.total\r\n                                                })\r\n                                                total += newValue ? newValue.sale_price * selectedCartons : 0\r\n                                                setGrandTotal(total)\r\n                                                setTotal(newValue ? newValue.sale_price * selectedCartons : 0)\r\n                                            }}\r\n                                            renderInput={(params) =>\r\n                                                <div ref={params.InputProps.ref}>\r\n                                                    <input style={{ height: 35 }} type=\"text\" {...params.inputProps} />\r\n                                                </div>\r\n                                            }\r\n                                        />\r\n                                    </td>\r\n\r\n                                    <td style={{ width: '10%' }}>\r\n                                        <input disabled style={{ width: '100%', height: 35 }} value={selectedProduct && allItems[index + 1]?.selectedProduct ? allItems[index + 1]?.selectedProduct : selectedProduct.quantity} />\r\n                                    </td>\r\n                                    <td style={{ width: '10%' }}>\r\n                                        {/* carton */}\r\n                                        <input type='number' style={{ width: '100%', height: 35 }} value={allItems[index + 1]?.carton ? allItems[index + 1]?.carton : selectedCartons} onChange={(e) => {\r\n                                            e.target.value < 1 ? setSelectedCartons(1) : setSelectedCartons(e.target.value); setTotal(e.target.value * price);\r\n                                            let total1 = 0;\r\n                                            let discount1 = 0;\r\n                                            allItems.map((x, index) => {\r\n                                                if (index != 0) {\r\n                                                    total1 += x.total\r\n                                                    discount1 += x.discount\r\n                                                }\r\n                                            })\r\n                                            total1 += e.target.value * price\r\n                                            setGrandTotal(total1)\r\n\r\n                                        }} />\r\n                                    </td>\r\n                                    <td style={{ width: '10%' }}>\r\n\r\n                                        <input disabled style={{ width: '100%', height: 35 }} value={selectedProduct && allItems[index + 1]?.item ? allItems[index + 1]?.item : selectedProduct.product_per_carton} />\r\n                                    </td>\r\n                                    <td style={{ width: '10%' }}>\r\n                                        <input disabled type='number' style={{ width: '100%', height: 35 }} value={allItems[index + 1]?.quantity ? allItems[index + 1]?.quantity : selectedCartons} />\r\n                                    </td>\r\n                                    <td style={{ width: '10%' }}>\r\n                                        {/* rate */}\r\n                                        <input style={{ width: '100%', height: 35 }} value={allItems[index + 1]?.price ? allItems[index + 1]?.price : price} onChange={e => {\r\n                                            // alert('here')\r\n                                            setPrice(e.target.value);\r\n                                            setTotal((selectedCartons * e.target.value))\r\n                                            let total1 = 0\r\n                                            let discount1 = 0\r\n                                            allItems.map((x, index) => {\r\n                                                if (index != 0) {\r\n                                                    // alert(JSON.stringify(x.total))\r\n\r\n                                                    total1 += x.total\r\n                                                    discount1 += x.discount\r\n                                                }\r\n                                            })\r\n                                            total1 += (selectedCartons * e.target.value)\r\n                                            // alert(selectedCartons * e.target.value)\r\n                                            // alert(total1)\r\n                                            setGrandTotal(total1)\r\n                                        }} />\r\n                                    </td>\r\n                                    <td style={{ width: '10%' }}>\r\n                                        {/* discpupnt */}\r\n                                        <input type='number' style={{ width: '100%', height: 35 }} value={typeof allItems[index + 1]?.discount != 'undefined' ? allItems[index + 1]?.discount : discount} onChange={e => {\r\n                                            setDiscount(e.target.value);\r\n                                            // setTotal(total - parseInt(e.target.value))\r\n                                            let total1 = 0\r\n                                            let discount1 = 0\r\n                                            allItems.map((x, index) => {\r\n                                                if (index != 0) {\r\n                                                    // alert(typeof (x.discount))\r\n\r\n                                                    total1 += x.total\r\n                                                    discount1 += parseInt(x.discount)\r\n                                                }\r\n                                            })\r\n                                            // alert(e.target.value)\r\n                                            discount1 += parseInt(e.target.value)\r\n                                            // alert(selectedCartons * e.target.value)\r\n                                            // alert(total1)\r\n                                            setTotalDiscount(discount1)\r\n                                            // setGrandTotal(grandTotal - discount1)\r\n                                        }} />\r\n                                    </td>\r\n                                    <td style={{ width: '10%' }}>\r\n                                        <input disabled type='number' style={{ width: '100%', height: 35 }} value={allItems[index + 1]?.total ? allItems[index + 1]?.total : total - discount} />\r\n                                    </td>\r\n                                    <td style={{ width: '10%' }}>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            // color=\"danger\"\r\n                                            size=\"small\"\r\n                                            // className={classes.button}\r\n                                            // startIcon={<SaveIcon />}\r\n                                            style={{\r\n                                                marginLeft: 10,\r\n                                                backgroundColor: 'red',\r\n                                                color: 'white'\r\n\r\n                                            }}\r\n                                            onClick={() => {\r\n                                                alert(index + 1)\r\n                                                let temp = allItems\r\n                                                temp.splice((index + 1), 1)\r\n                                                setAllItems(temp)\r\n                                            }}\r\n                                        >\r\n                                            Delete\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            )}\r\n\r\n                        </tbody>\r\n                    </table>\r\n                    {/* <div style={{ display: 'table-cell' }}>helo</div> */}\r\n\r\n                    <table class=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"row\" style={{ width: '80%' }}><p style={{ float: 'right' }}>Total Discount</p></th>\r\n                                <th scope=\"row\" style={{ width: '20%' }}>\r\n                                    <input disabled value={totalDiscount} />\r\n                                </th>\r\n                            </tr>\r\n\r\n\r\n                            <tr>\r\n                                {/* <th scope=\"row\" style={{ width: '20%' }}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size=\"small\"\r\n                                        // className={classes.button}\r\n                                        // startIcon={<SaveIcon />}\r\n                                        style={{\r\n                                            marginLeft: 10,\r\n                                            backgroundColor: '#003366'\r\n                                        }}\r\n                                        onClick={(e) => addItem()}\r\n                                    >\r\n                                        Add Item\r\n                                    </Button>\r\n                                    {/* <p style={{ float: 'left' }}></p> */}\r\n                                {/* </th> */}\r\n                                <th scope=\"row\" style={{ width: '80%' }}><p style={{ float: 'right' }}>Paid Amount</p></th>\r\n                                <th scope=\"row\" style={{ width: '20%' }}>\r\n                                    <input value={paidAmount} onChange={e => setPaidAmount(e.target.value)} type=\"number\" />\r\n                                </th>\r\n                            </tr>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            <tr>\r\n                                <th scope=\"row\" style={{ width: '20%' }}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size=\"small\"\r\n                                        // className={classes.button}\r\n                                        // startIcon={<SaveIcon />}\r\n                                        style={{\r\n                                            marginLeft: 10,\r\n                                            backgroundColor: '#003366'\r\n                                        }}\r\n                                        onClick={(e) => addItem()}\r\n                                    >\r\n                                        Add Item\r\n                                    </Button>\r\n                                    {/* <p style={{ float: 'left' }}></p> */}\r\n                                    <p style={{ float: 'right' }}>Grand Total</p>\r\n                                </th>\r\n                                {/* <th scope=\"row\" style={{ width: '60%' }}>\r\n                                    </th> */}\r\n                                <th scope=\"row\" style={{ width: '20%' }}>\r\n                                    <input disabled value={\r\n                                        grandTotal - totalDiscount\r\n\r\n                                    } />\r\n                                </th>\r\n                            </tr>\r\n\r\n                        </thead>\r\n\r\n                    </table>\r\n                    <table class=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"row\" style={{ width: '80%' }}><p style={{ float: 'right' }}></p></th>\r\n                                <th scope=\"row\" style={{ width: '20%' }}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size=\"small\"\r\n                                        // className={classes.button}\r\n                                        // startIcon={<SaveIcon />}\r\n                                        style={{\r\n                                            marginLeft: 10,\r\n                                            backgroundColor: '#003366'\r\n                                        }}\r\n                                        onClick={(e) => handleSubmit(e)}\r\n                                    >\r\n                                        Submit\r\n                                    </Button>\r\n                                </th>\r\n                            </tr>\r\n\r\n\r\n                        </thead>\r\n\r\n                    </table>\r\n\r\n                </form>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n","import { AppBar, Button, Container, Divider, Grid } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport TextField from '../Form/TextField'\r\nimport InputField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport api from '../../api/api';\r\nimport Toast from '../Toast/toast'\r\nimport { useHistory } from 'react-router';\r\n\r\nexport default function AddInvoice() {\r\n    const [allCategory, setAllCategory] = useState([])\r\n    const [allSupplier, setAllSupplier] = useState([])\r\n    const [barCode, setBarCode] = useState('')\r\n    const [productName, setProductName] = useState('')\r\n    const [detail, setDetail] = useState('')\r\n    const [productPerCarton, setProductPerCarton] = useState(0)\r\n    const [salePrice, setSalePrice] = useState(0)\r\n    const [supplierPrice, setSupplierPrice] = useState(0)\r\n    const [model, setModel] = useState()\r\n    const [category, setCategory] = useState()\r\n    const [supplier_name, setSupplierName] = useState()\r\n    const [toast, setToast] = useState(false)\r\n    const [title, setTitle] = useState('')\r\n    const [type, setType] = useState('success')\r\n    const history = useHistory()\r\n\r\n    useEffect(async () => {\r\n        const res = await api.get('category/get_all')\r\n        if (res.data.data)\r\n            setAllCategory(res.data.data)\r\n\r\n        const response = await api.get('supplier/get_all')\r\n        if (response.data.data)\r\n            setAllSupplier(response.data.data)\r\n        if (history.location.pathname == '/editproduct') {\r\n            // alert(JSON.stringify(history.location.state.id))\r\n            const productData = await api.get(`product/get/${history.location.state.id}`)\r\n            let data = productData.data.data\r\n            // alert(JSON.stringify(data))\r\n            setBarCode(data.barcode)\r\n            setProductName(data.product_name)\r\n            setDetail(data.details)\r\n            setCategory(data.category)\r\n            setProductPerCarton(data.product_per_carton)\r\n            setSalePrice(data.sale_price)\r\n            setSupplierName(data.supplier_name)\r\n            setSupplierPrice(data.supplier_price)\r\n        }\r\n    }, [])\r\n\r\n    const handleSubmit = async () => {\r\n\r\n        try {\r\n            const res = null\r\n            if (history.location.pathname == '/editproduct')\r\n                res = await api.put(`product/update/${history.location.state.id}`, {\r\n                    barcode: barCode,\r\n                    product_name: productName,\r\n                    details: detail,\r\n                    category,\r\n                    product_per_carton: productPerCarton,\r\n                    supplier_name: supplier_name,\r\n                    sale_price: salePrice,\r\n                    supplier_price: supplierPrice\r\n                })\r\n            else\r\n                res = await api.post('product/add', {\r\n                    barcode: barCode,\r\n                    product_name: productName,\r\n                    details: detail,\r\n                    category,\r\n                    product_per_carton: productPerCarton,\r\n                    supplier_name: supplier_name,\r\n                    sale_price: salePrice,\r\n                    supplier_price: supplierPrice\r\n                })\r\n            if (res.data.data) {\r\n\r\n                setToast(false)\r\n                setToast(true)\r\n                setType('success')\r\n                setTitle('Added Succesfully')\r\n                // history.push({ pathname: '/invoice', state: { name: selectedProduct.product_name, price, quantity: selectedCartons, grand_total: total - discount } })\r\n            }\r\n            else {\r\n\r\n                setToast(false)\r\n                setToast(true)\r\n                setType('error')\r\n                setTitle(res.data.message)\r\n\r\n            }\r\n        } catch (error) {\r\n            // alert('i')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <>\r\n\r\n            {toast &&\r\n\r\n                <Toast open={true} title={title} type={type} />\r\n            }\r\n            <Container style={{ padding: '10px 10px 10px 10px' }}>\r\n                <p style={{ fontSize: 18 }}>Add new Product</p>\r\n                <Divider />\r\n\r\n                <Grid container xs={12} style={{ marginTop: 20 }}>\r\n\r\n                    <Grid container xs={6}>\r\n\r\n                        <TextField\r\n                            // required\r\n                            id=\"Barcode/QR-code\"\r\n                            name=\"Barcode/QR-code\"\r\n                            label=\"Barcode/QR-code\"\r\n                            fullWidth\r\n                            title='Barcode/QR-code'\r\n                            placeholder='Barcode/QR-code'\r\n                            autoComplete=\"given-name\"\r\n                            variant=\"filled\"\r\n                            value={barCode}\r\n                            style={{ height: 35, marginBottom: 10 }}\r\n                            onChange={(e) => setBarCode(e.target.value)}\r\n                        />\r\n                    </Grid>\r\n                    <Grid container xs={6}>\r\n\r\n                        {/* <Button>New Customer</Button> */}\r\n                    </Grid>\r\n\r\n\r\n\r\n                    <Grid container xs={6}>\r\n\r\n                        <TextField\r\n                            required\r\n                            id=\"productname\"\r\n                            name=\"productname\"\r\n                            label=\"Product Name\"\r\n                            fullWidth\r\n                            title='Product Name'\r\n                            placeholder='Product Name'\r\n                            autoComplete=\"given-name\"\r\n                            variant=\"filled\"\r\n                            value={productName}\r\n                            style={{ height: 35, marginBottom: 10 }}\r\n                            inputType='text'\r\n                            onChange={(e) => setProductName(e.target.value)}\r\n                        />\r\n                    </Grid>\r\n                    <Grid xs={1}></Grid>\r\n                    <Grid container xs={5}>\r\n\r\n                        <TextField\r\n                            // required\r\n                            id=\"detail\"\r\n                            name=\"detail\"\r\n\r\n                            fullWidth\r\n                            title='Detail'\r\n                            placeholder='Detail'\r\n                            autoComplete=\"given-name\"\r\n                            variant=\"filled\"\r\n                            value={detail}\r\n                            style={{ height: 35, marginBottom: 70 }}\r\n                            type='textarea'\r\n                            onChange={(e) => setDetail(e.target.value)}\r\n                        />\r\n                    </Grid>\r\n\r\n\r\n                    <Grid container xs={6}>\r\n                        <Grid xs={3}>Catagory</Grid>\r\n                        <Grid xs={9}>\r\n\r\n\r\n                            <Autocomplete\r\n                                id=\"combo-box-demo\"\r\n                                value={category}\r\n                                options={allCategory}\r\n                                getOptionLabel={(option) => option.category_name}\r\n                                // style={{ marginTop: 10 }}\r\n                                onChange={(e, newValue) => {\r\n                                    setCategory(newValue.category_name)\r\n\r\n                                }}\r\n                                renderInput={(params) =>\r\n                                    <div ref={params.InputProps.ref}>\r\n                                        <input style={{ height: 35, width: '100%', marginBottom: 20 }} type=\"text\" {...params.inputProps} placeholder=\"Select One\" />\r\n                                    </div>\r\n                                }\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n\r\n\r\n                </Grid>\r\n                <form xs={12}\r\n                    onSubmit={(e) => handleSubmit(e)}\r\n                >\r\n\r\n                    <table class=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">Product Per Carton</th>\r\n                                <th scope=\"col\">Sale Price</th>\r\n                                <th scope=\"col\">Supplier Price</th>\r\n                                {/* <th scope=\"col\">Model</th> */}\r\n                                <th scope=\"col\">Supplier</th>\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n\r\n                                <td style={{ width: '15%' }}>\r\n                                    <input type='number' style={{ width: '100%', height: 35 }} value={productPerCarton} onChange={e => setProductPerCarton(e.target.value < 0 ? 0 : e.target.value)} />\r\n\r\n                                </td>\r\n\r\n                                <td style={{ width: '15%' }}>\r\n                                    <input style={{ width: '100%', height: 35 }} value={salePrice} onChange={e => setSalePrice(e.target.value)} />\r\n                                </td>\r\n                                <td style={{ width: '15%' }}>\r\n                                    <input type='number' style={{ width: '100%', height: 35 }} value={supplierPrice} onChange={(e) => { setSupplierPrice(e.target.value < 0 ? 0 : e.target.value) }} />\r\n                                </td>\r\n                                {/* <td style={{ width: '15%' }}>\r\n                                    <input style={{ width: '100%', height: 35 }} value={model} onChange={e => setModel(e.target.value)} />\r\n                                </td> */}\r\n                                <td style={{ width: '40%' }}>\r\n                                    <Autocomplete\r\n                                        id=\"combo-box-demo\"\r\n                                        value={supplier_name}\r\n                                        options={allSupplier}\r\n                                        getOptionLabel={(option) => option.supplier_name}\r\n                                        // style={{ marginTop: 10 }}\r\n                                        onChange={(e, newValue) => {\r\n                                            setSupplierName(newValue.supplier_name)\r\n                                        }}\r\n                                        renderInput={(params) =>\r\n                                            <div ref={params.InputProps.ref}>\r\n                                                <input style={{ height: 35, width: '100%' }} type=\"text\" {...params.inputProps} />\r\n                                            </div>\r\n                                        }\r\n                                    />\r\n                                </td>\r\n\r\n\r\n\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </table>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        // color=\"danger\"\r\n                        size=\"small\"\r\n                        // className={classes.button}\r\n                        // startIcon={<SaveIcon />}\r\n                        style={{\r\n                            marginLeft: 10,\r\n                            backgroundColor: '#003366',\r\n                            color: 'white'\r\n\r\n                        }}\r\n                        onClick={() => handleSubmit()}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n\r\n                </form>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n","import { AppBar, Button, Container, Divider, Grid } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport TextField from '../Form/TextField'\r\nimport InputField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport api from '../../api/api';\r\nimport Toast from '../Toast/toast'\r\nimport { useHistory } from 'react-router';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Bar from '../AppBar/AppBarComponent'\r\nimport { isAdmin } from '../../helpers/isAuthenticated'\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\nfunction createData(sl, category, action) {\r\n    return { sl, category, action };\r\n}\r\nexport default function AddInvoice() {\r\n    const [category, setCategory] = useState('')\r\n    const [rows, setRows] = useState([])\r\n    const [openDialog, setOpenDialog] = React.useState(false);\r\n    const [itemToDelete, setItemToDelete] = React.useState(null);\r\n\r\n\r\n\r\n    const [toast, setToast] = useState(false)\r\n    const [title, setTitle] = useState('')\r\n    const [type, setType] = useState('success')\r\n    const history = useHistory()\r\n    const classes = useStyles();\r\n    const [status, setStatus] = useState('add')\r\n    const [selectedItem, setSelectedItem] = useState('')\r\n\r\n    const handleDialog = () => {\r\n        setOpenDialog(!openDialog)\r\n    }\r\n    useEffect(async () => {\r\n        const res = await api.get('category/get_all')\r\n        if (res.data.data) {\r\n            let temp = []\r\n            res.data.data.map(x => {\r\n                temp.push(createData(x._id, x.category_name))\r\n            })\r\n            setRows(temp)\r\n        }\r\n\r\n    }, [])\r\n\r\n    const handleSubmit = async () => {\r\n        var res = null\r\n        if (status == 'add')\r\n            res = await api.post('category/add', {\r\n                category_name: category\r\n            })\r\n        else\r\n            res = await api.put(`category/update/${selectedItem}`, {\r\n                category_name: category\r\n            })\r\n        if (res.data.data) {\r\n            // alert('in')\r\n            setStatus('add')\r\n            setType('success')\r\n            setTitle('Added Succesfully')\r\n            setToast(false)\r\n            setToast(true)\r\n            window.location.reload()\r\n            // history.push({ pathname: '/invoice', state: { name: selectedProduct.product_name, price, quantity: selectedCartons, grand_total: total - discount } })\r\n        }\r\n        else {\r\n            // alert('in ewrror')\r\n            setToast(false)\r\n            setToast(true)\r\n            setType('error')\r\n            setTitle(res.data.message)\r\n\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <Bar title=\"Add Category\" link1=\"Dashboard\" link2=\"Add Category\" />\r\n            {toast &&\r\n\r\n                <Toast open={true} title={title} type={type} />\r\n            }\r\n            <Container style={{ padding: '10px 10px 10px 10px', overflow: 'auto' }}>\r\n\r\n\r\n\r\n                <Grid container xs={12} style={{ marginTop: 20 }}>\r\n                    <Grid item xs={3} style={{}}>Category Name</Grid>\r\n                    <Grid item xs={4}>\r\n                        <input style={{ width: '100%', height: 35 }} placeholder=\"Category Name\" onChange={e => setCategory(e.target.value)} value={category} />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container xs={12} style={{ marginTop: 10 }}>\r\n                    <Grid item xs={3} style={{}}></Grid>\r\n                    <Grid item xs={4}>\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            // color=\"danger\"\r\n                            size=\"small\"\r\n                            // className={classes.button}\r\n                            // startIcon={<SaveIcon />}\r\n                            style={{\r\n                                marginLeft: 10,\r\n                                backgroundColor: '#003366',\r\n                                color: 'white'\r\n\r\n                            }}\r\n                            onClick={() => handleSubmit()}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n            </Container>\r\n            <Container style={{ marginTop: 100 }}>\r\n                <Grid constainer>\r\n                    <TableContainer component={Paper}>\r\n                        <Table className={classes.table} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>SL.</TableCell>\r\n                                    <TableCell >Catagory Name</TableCell>\r\n                                    <TableCell >Actions</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows.map((row, index) => (\r\n                                    <TableRow key={row.sl}>\r\n                                        <TableCell >\r\n                                            {index + 1011}\r\n                                        </TableCell>\r\n                                        <TableCell >{row.category}</TableCell>\r\n                                        <TableCell >\r\n                                            {isAdmin() &&\r\n                                                <>\r\n                                                    {/* <span onClick={() => history.push({ pathname: 'editcustomer', state: { id: row.Id } })}> */}\r\n                                                    <span\r\n                                                        // onClick={() => history.push({ pathname: history.location.pathname == '/customerlist' ? 'editcustomer' : 'editsupplier', state: { id: row.Id } })}\r\n                                                        onClick={() => {\r\n                                                            setSelectedItem(row.sl)\r\n                                                            setStatus('edit')\r\n                                                            setCategory(row.category)\r\n                                                        }\r\n                                                        }\r\n                                                    >\r\n                                                        <EditIcon style={{ color: '#003366', cursor: 'pointer' }} />\r\n                                                    </span>\r\n                                                    <span\r\n                                                        onClick={() => {\r\n                                                            handleDialog();\r\n                                                            setItemToDelete(row.sl)\r\n                                                        }}\r\n                                                    >\r\n                                                        <DeleteIcon style={{ color: 'red', marginLeft: 10, cursor: 'pointer' }} />\r\n                                                    </span>\r\n                                                </>\r\n                                            }\r\n                                        </TableCell>\r\n\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n\r\n                </Grid>\r\n            </Container>\r\n            <Dialog\r\n                open={openDialog}\r\n                onClose={handleDialog}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Are you sure to delete?\"}</DialogTitle>\r\n\r\n                <DialogActions>\r\n                    <Button onClick={handleDialog} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={async () => {\r\n                        // alert(itemToDelete)\r\n                        const res = await api.delete('category/delete/' + itemToDelete)\r\n                        // alert(JSON.stringify(res.data))\r\n                        // if (res.data.data)\r\n                        handleDialog()\r\n                        window.location.reload()\r\n                    }} style={{ color: 'red' }} autoFocus>\r\n                        Yes\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport api from '../../api/api';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Divider } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Bar from '../AppBar/AppBarComponent'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { isAdmin } from '../../helpers/isAuthenticated'\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\nfunction createData(id, barcode, product_name, details, category, product_per_carton, sale_price, supplier_price, supplier_name, actions) {\r\n    return { id, barcode, product_name, details, category, product_per_carton, sale_price, supplier_price, supplier_name, actions };\r\n}\r\n\r\n\r\n\r\nexport default function BasicTable() {\r\n    const classes = useStyles();\r\n    const [rows, setRows] = useState([])\r\n    const [allData, setAllData] = useState([])\r\n\r\n    const history = useHistory()\r\n\r\n    const [openDialog, setOpenDialog] = React.useState(false);\r\n    const [itemToDelete, setItemToDelete] = React.useState('');\r\n    const handleDialog = () => {\r\n        setOpenDialog(!openDialog)\r\n    }\r\n    const DeleteItem = async () => {\r\n        var res = null;\r\n        res = await api.delete(`product/delete/${itemToDelete}`)\r\n        // alert(JSON.stringify(res.data))\r\n        handleDialog()\r\n        window.location.reload()\r\n    }\r\n\r\n    useEffect(async () => {\r\n        const res = await api.get('product/get_all')\r\n        if (res.data.data) {\r\n            // alert(JSON.stringify(res.data.data))\r\n            let temp = []\r\n            res.data.data.map(x => {\r\n                temp.push(createData(x._id, x.barcode, x.product_name, x.details, x.category, x.product_per_carton, x.sale_price, x.supplier_price, x.supplier_name))\r\n            })\r\n            setRows(temp)\r\n            setAllData(res.data.data)\r\n        }\r\n    }, [])\r\n\r\n    const setDataForSearch = (data) => {\r\n        var temp = []\r\n        data.map(x =>\r\n            temp.push(createData(x._id, x.barcode, x.product_name, x.details, x.category, x.product_per_carton, x.sale_price, x.supplier_price, x.supplier_name))\r\n        )\r\n        setRows(temp)\r\n    }\r\n    return (<>\r\n        <Bar title=\"Category\" link1=\"Dashboard\" link2=\"Category List\" data={allData} setDataForSearch={setDataForSearch} from='cat' />\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Id</TableCell>\r\n                        <TableCell >Barcode</TableCell>\r\n                        <TableCell >Product Name</TableCell>\r\n                        <TableCell >Details</TableCell>\r\n                        <TableCell >Category</TableCell>\r\n                        <TableCell >Product Per Carton</TableCell>\r\n                        <TableCell >Sale Price</TableCell>\r\n                        <TableCell >Supplier Price</TableCell>\r\n                        <TableCell >Supplier Name</TableCell>\r\n                        <TableCell >Actions</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows.map((row, index) => (\r\n                        <TableRow key={row.id}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {index + 1011}\r\n                            </TableCell>\r\n                            <TableCell >{row.barcode}</TableCell>\r\n                            <TableCell >{row.product_name}</TableCell>\r\n                            <TableCell >{row.details}</TableCell>\r\n                            <TableCell >{row.category}</TableCell>\r\n                            <TableCell >{row.product_per_carton}</TableCell>\r\n                            <TableCell >{row.sale_price}</TableCell>\r\n                            <TableCell >{row.supplier_price}</TableCell>\r\n                            <TableCell >{row.supplier_name}</TableCell>\r\n                            <TableCell >\r\n                                {\r\n                                    isAdmin() &&\r\n                                    <>\r\n                                        {/* <span onClick={() => history.push({ pathname: 'editcustomer', state: { id: row.Id } })}> */}\r\n                                        <span onClick={() => history.push({ pathname: '/editproduct', state: { id: row.id } })}>\r\n                                            <EditIcon style={{ color: '#003366', cursor: 'pointer' }} />\r\n                                        </span>\r\n                                        <span\r\n                                            onClick={() => {\r\n                                                handleDialog();\r\n                                                setItemToDelete(row.id)\r\n                                            }}\r\n                                        >\r\n                                            <DeleteIcon style={{ color: 'red', marginLeft: 10, cursor: 'pointer' }} />\r\n                                        </span>\r\n                                    </>\r\n                                }\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n        <Dialog\r\n            open={openDialog}\r\n            onClose={handleDialog}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{\"Are you sure to delete?\"}</DialogTitle>\r\n\r\n            <DialogActions>\r\n                <Button onClick={handleDialog} color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n                <Button onClick={DeleteItem} style={{ color: 'red' }} autoFocus>\r\n                    Yes\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    </>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport api from '../../api/api';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Divider } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Bar from '../AppBar/AppBarComponent'\r\nimport { useHistory } from 'react-router';\r\nimport { isAdmin } from '../../helpers/isAuthenticated'\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\nfunction createData(id, sellno, name, date, amount, paid_amount, actions) {\r\n    return { id, sellno, name, date, amount, paid_amount, actions };\r\n}\r\n\r\n\r\n\r\nexport default function BasicTable() {\r\n    const classes = useStyles();\r\n    const [rows, setRows] = useState([])\r\n    const [allData, setAllData] = useState([])\r\n    const [openDialog, setOpenDialog] = React.useState(false);\r\n    const [itemToDelete, setItemToDelete] = React.useState('');\r\n    const history = useHistory()\r\n    const handleDialog = () => {\r\n        setOpenDialog(!openDialog)\r\n    }\r\n    const DeleteItem = async () => {\r\n        var res = null;\r\n        res = await api.delete(`invoice/delete/${itemToDelete}`)\r\n        // alert(JSON.stringify(res.data))\r\n        handleDialog()\r\n        window.location.reload()\r\n    }\r\n    useEffect(async () => {\r\n        const res = await api.get('invoice/get_all')\r\n        if (res.data.data) {\r\n            // alert(JSON.stringify(res.data.data[0]))\r\n            let temp = []\r\n            res.data.data.map(x => {\r\n                temp.push(createData(x._id, 1, x.customer_name, x.date, x.grand_total, x.paid_amount))\r\n            })\r\n            setRows(temp)\r\n            setAllData(res.data.data)\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    const setDataForSearch = (data) => {\r\n        var temp = []\r\n        data.map(x =>\r\n            temp.push(createData(x._id, 1, x.customer_name, x.date, x.grand_total))\r\n        )\r\n        setRows(temp)\r\n    }\r\n    return (<>\r\n        <Bar title=\"Manage Invoice\" link1=\"Dashboard\" link2=\"Category List\" data={allData} setDataForSearch={setDataForSearch} from='invoice' />\r\n        {/* <p style={{ fontSize: 18, marginLeft: 10, }}>Manage Invoice</p> */}\r\n        <Divider />\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Id</TableCell>\r\n                        <TableCell >Sell No</TableCell>\r\n                        <TableCell >Customer Name</TableCell>\r\n                        <TableCell >Date</TableCell>\r\n                        <TableCell >Amount</TableCell>\r\n                        <TableCell >Paid Amount</TableCell>\r\n                        <TableCell >Actions</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows.map((row, index) => (\r\n                        <TableRow key={row.id}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {index + 1011}\r\n                            </TableCell>\r\n                            <TableCell >{row.sellno}</TableCell>\r\n                            <TableCell onClick={() => {\r\n                                localStorage.setItem('name', row.name)\r\n                                window.location = `/allinvoicesof`\r\n                            }} style={{ color: 'blue', cursor: 'pointer' }}>\r\n                                {row.name}\r\n                            </TableCell>\r\n                            <TableCell >{row.date.split('T')[0]}</TableCell>\r\n                            <TableCell >{row.amount}</TableCell>\r\n                            <TableCell >{row.paid_amount}</TableCell>\r\n                            <TableCell >\r\n                                {/* <span onClick={() => history.push({ pathname: 'editcustomer', state: { id: row.Id } })}> */}\r\n                                {/* <span onClick={() => history.push({ pathname: history.location.pathname == '/customerlist' ? 'editcustomer' : 'editsupplier', state: { id: row.Id } })}>\r\n                                            <EditIcon style={{ color: '#003366', cursor: 'pointer' }} />\r\n                                        </span> */}\r\n                                <span\r\n                                    onClick={() => {\r\n                                        handleDialog();\r\n                                        setItemToDelete(row.Id)\r\n                                    }}\r\n                                >{\r\n                                        isAdmin() &&\r\n                                        <DeleteIcon style={{ color: 'red', marginLeft: 10, cursor: 'pointer' }} />\r\n                                    }\r\n                                </span>\r\n                            </TableCell>\r\n\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n        <Dialog\r\n            open={openDialog}\r\n            onClose={handleDialog}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{\"Are you sure to delete?\"}</DialogTitle>\r\n\r\n            <DialogActions>\r\n                <Button onClick={handleDialog} color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n                <Button onClick={DeleteItem} style={{ color: 'red' }} autoFocus>\r\n                    Yes\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    </>\r\n    );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport api from '../../api/api';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Alert from '../Toast/toast'\r\nimport Bar from '../AppBar/AppBarComponent'\r\n\r\n\r\n\r\nfunction createData(serielNumber, Particular, ChequeNo, ChequeDate, Debit, Credit, Balance) {\r\n    return { serielNumber, Particular, ChequeNo, ChequeDate, Debit, Credit, Balance };\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nexport default function SuplierLedger(props) {\r\n    const history = useHistory()\r\n    const classes = useStyles();\r\n    const [userData, setUserData] = React.useState('');\r\n    const [allData, setAllData] = React.useState([]);\r\n    const [rows, setRows] = React.useState([]);\r\n    const [Debit, setDebit] = React.useState(0);\r\n    const [Credit, setCredit] = React.useState(0);\r\n    const [Loading, setLoading] = React.useState(false);\r\n\r\n\r\n    const [openDialog, setOpenDialog] = React.useState(false);\r\n\r\n\r\n    const get_all_Ledger = async () => {\r\n        // alert('working')\r\n        try {\r\n\r\n            const res = await api.get(`ledger/getuserledger/${props.id}`);\r\n            console.log(res)\r\n            console.log(res.data.data)\r\n            if (typeof res.data.data.records == 'undefined')\r\n\r\n                setUserData([])\r\n            else {\r\n                // alert('here')\r\n                let temp = []\r\n                res.data.data.records.map(item =>\r\n                    temp.push(createData(item.serielNumber, item.particular, item.chequeNo, item.chqDate, item.debit, item.credit, item.balance))\r\n\r\n                )\r\n                setRows(temp)\r\n                setAllData(res.data.data.records)\r\n                setDebit(res.data.data.total_debit)\r\n                setCredit(res.data.data.total_credit)\r\n                setLoading(false)\r\n            }\r\n            setUserData(res.data.data.records)\r\n        } catch (error) {\r\n            alert(error)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        get_all_Ledger()\r\n    }, [])\r\n\r\n\r\n    const setDataForSearch = (data) => {\r\n        // alert(JSON.stringify(data.length))\r\n        let temp = []\r\n        data.map(item =>\r\n            temp.push(createData(item.serielNumber, item.particular, item.chequeNo, item.chqDate, item.debit, item.credit, item.balance))\r\n        )\r\n        setRows(temp)\r\n    }\r\n\r\n    return (<>\r\n        <Bar title='Supplier' link1=\"Dashboard\" link2=\"Ledger Entries\" data={allData} setDataForSearch={setDataForSearch} from='suplier' />\r\n\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                <Alert />\r\n                {Loading ? <CircularProgress /> :\r\n                    <TableContainer component={Paper}>\r\n                        <Table className={classes.table} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Seriel Number</TableCell>\r\n                                    <TableCell>Particular</TableCell>\r\n                                    <TableCell>Cheque No</TableCell>\r\n                                    <TableCell>Cheque Date</TableCell>\r\n                                    <TableCell>Debit</TableCell>\r\n                                    <TableCell>Credit</TableCell>\r\n                                    <TableCell>Balance</TableCell>\r\n\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows.map((row, index) => (\r\n                                    <TableRow key={index}>\r\n\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {index + 1011}\r\n                                        </TableCell>\r\n                                        <TableCell >{row.Particular}</TableCell>\r\n                                        <TableCell >{row.ChequeNo}</TableCell>\r\n                                        <TableCell >{row.ChequeDate}</TableCell>\r\n                                        <TableCell >{row.Debit}</TableCell>\r\n                                        <TableCell >{row.Credit}</TableCell>\r\n                                        <TableCell >{row.Balance}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n\r\n                                <TableRow>\r\n                                    <TableCell rowSpan={3} />\r\n                                    <TableCell rowSpan={3} />\r\n                                    <TableCell rowSpan={3} />\r\n                                    {/* <TableCell colSpan={2}  align=\"right\"></TableCell> */}\r\n                                    <TableCell colSpan={1} align=\"left\">Total Debit</TableCell>\r\n                                    <TableCell colspan={2} align=\"left\">{Debit}</TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    {/* <TableCell colSpan={2}  align=\"right\"></TableCell> */}\r\n                                    <TableCell colSpan={2} align=\"left\">Total Credit</TableCell>\r\n                                    <TableCell colspan={1} align=\"left\">{Credit}</TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                }\r\n            </Paper>\r\n        </div>\r\n    </>\r\n    );\r\n}\r\n","import React, { Component, useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport api from '../../api/api'\r\n\r\n\r\nimport { Divider, Grid } from '@material-ui/core';\r\nimport ReactToPrint from \"react-to-print\";\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport Button from '@material-ui/core/Button'\r\nimport SuplierLedger from '../Ledger/Suplier';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default class PersonDetail extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: [],\r\n\r\n        }\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <p style={{ fontSize: 18, marginLeft: 10, padding: \"10px 0 10px 0\" }}>Ledger\r\n                    <span style={{ float: 'right', marginRight: 10 }}>\r\n                        <NavLink to={`/Add_Ledger_Entry?${(new URLSearchParams(this.props.history.location.search).get('type'))}=${(new URLSearchParams(this.props.history.location.search).get('id'))}`}>\r\n                            <button className=\"btn btn-primary\">Add</button>\r\n                        </NavLink>\r\n                        <ReactToPrint\r\n\r\n                            trigger={() =>\r\n                                <Button\r\n                                    style={{ marginLeft: 10 }}\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"large\"\r\n                                    // className={classes.button}\r\n                                    // startIcon={}\r\n                                    onClick={() => window.location = '/addstock'}\r\n                                >\r\n                                    <PrintIcon />\r\n                                </Button>}\r\n                            content={() => this.componentRef}\r\n                        />\r\n                    </span>\r\n                </p>\r\n                <Divider />\r\n                <div style={{}}>\r\n                    {/* {JSON.stringify(this.state.data)} */}\r\n                    <ComponentToPrint ref={(el) => (this.componentRef = el)} type={(new URLSearchParams(this.props.history.location.search).get('type'))} id={(new URLSearchParams(this.props.history.location.search).get('id'))} />\r\n                </div >\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nclass ComponentToPrint extends React.Component {\r\n    render(props) {\r\n        var data = this.props.data\r\n        var type = this.props.type\r\n        return (\r\n            <>\r\n                <SuplierLedger id={this.props.id} />\r\n            </>\r\n        )\r\n    }\r\n}","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport { Container, Grid } from '@material-ui/core';\r\nimport ReactToPrint from \"react-to-print\";\r\n\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport Button from '@material-ui/core/Button'\r\nimport api from '../../api/api';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                color: theme.palette.secondary.main,\r\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            },\r\n    title: {\r\n        flex: '1 1 100%',\r\n    },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles();\r\n\r\n\r\n    return (\r\n        <Toolbar\r\n\r\n        >\r\n            <AppBar position=\"absolute\" className={classes.appBar} style={{ backgroundColor: '#002447' }}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                        Invoice Details\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nfunction DenseTable(props) {\r\n    function createData(si, item, qty, rate, amount) {\r\n        return { si, item, qty, rate, amount };\r\n    }\r\n    function createData(si, item, qty, rate) {\r\n        return { si, item, qty, rate };\r\n    }\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n    const [rows, setRows] = useState([])\r\n\r\n    useEffect(() => {\r\n        let temp = [\r\n        ]\r\n        props.data.map((x, index) => {\r\n            // alert(JSON.stringify(x))\r\n            temp.push(\r\n\r\n                createData(index + 1, x.product_name, x.quantity, x.sale_price)\r\n            )\r\n        })\r\n        setRows(temp)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {/* {JSON.stringify(props.data.allItems)}\r\n            {console.log(props.data.allItems[0])} */}\r\n            <TableContainer component={Paper}>\r\n                <Grid item xs={12}>\r\n                    <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>SI</TableCell>\r\n                                <TableCell align=\"right\">Item</TableCell>\r\n                                <TableCell align=\"right\">QTY SUTE</TableCell>\r\n                                <TableCell align=\"right\">Rate</TableCell>\r\n                                {/* <TableCell align=\"right\">Amount</TableCell> */}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {rows.map((row) => (\r\n                                <TableRow key={row.si}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {row.si}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">{row.item}</TableCell>\r\n                                    <TableCell align=\"right\">{row.qty}</TableCell>\r\n                                    <TableCell align=\"right\">{row.rate}</TableCell>\r\n                                    {/* <TableCell align=\"right\">{row.amount}</TableCell> */}\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Grid>\r\n            </TableContainer>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nclass ComponentToPrint extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            allData: []\r\n        }\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        // alert(JSON.stringify(history.location.state.id))\r\n        // alert(JSON.stringify(history.location.state.name))\r\n        const res = await api.get(`invoice/getAllInvoices/${localStorage.getItem('name')}`)\r\n        if (res.data.data) {\r\n            this.setState({ allData: res.data.data })\r\n            // alert(JSON.stringify(res.data.data))\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                {/* {JSON.stringify(allData[0])} */}\r\n                {\r\n                    this.state.allData.map(data =>\r\n                        <Grid container spacing={3} style={{ marginTop: 100 }}>\r\n                            <Grid item xs={12}  >\r\n                                <div style={{ lineHeight: 0, padding: '0 10px 10px 10px' }}>\r\n                                    <div style={{ textAlign: 'center', }}>\r\n                                        <p style={{ fontSize: 32, fontWeight: 'bold' }}>Tech Lab</p>\r\n                                        <p style={{ fontSize: 18, lineHeight: 1 }}>Uttara</p>\r\n                                        <p style={{ fontSize: 18 }}>0171123567</p>\r\n                                        <hr style={{ height: 2, border: 'none', backgroundColor: 'black' }} />\r\n                                        <p style={{ fontSize: 20, fontWeight: 'bold', lineHeight: 1 }}>IBNUSEENA Medicals Karma dubai</p>\r\n                                        <p style={{ fontSize: 18 }}>Karama shopping Complex Karama</p>\r\n                                        <p style={{ fontSize: 18, lineHeight: 1 }}>0171123567</p>\r\n                                        <p style={{ fontSize: 18 }}>0171123567</p>\r\n                                    </div>\r\n                                    <p style={{ fontSize: 20, fontWeight: 'bold', lineHeight: 1 }}>Sell No: 1894</p>\r\n                                    <DenseTable data={data.products} />\r\n                                    <hr style={{ height: 2, border: 'none', backgroundColor: 'black' }} />\r\n                                    <div style={{ height: 20, marginBottom: 16 }}>\r\n\r\n                                        <p style={{\r\n                                            fontSize: 18,\r\n                                            float: 'left',\r\n                                            // display: 'inline'\r\n                                        }}>Total</p>\r\n                                        <p style={{\r\n                                            fontSize: 18,\r\n                                            float: 'right',\r\n                                            // display: 'inline',\r\n\r\n                                        }}>{data.grand_total + 5}</p>\r\n                                    </div>\r\n\r\n                                    <hr style={{ height: 2, border: 'none', backgroundColor: 'black' }} />\r\n                                    <div style={{ height: 20, marginBottom: 20 }}>\r\n                                        <p style={{ fontSize: 20, fontWeight: 'bold', lineHeight: 0, float: 'left' }}>Paid Amount</p>\r\n                                        <p style={{ fontSize: 20, fontWeight: 'bold', lineHeight: 0, float: 'right' }}>{data.paid_amount}</p>\r\n                                    </div>\r\n                                    <hr style={{ height: 2, border: 'none', backgroundColor: 'black' }} />\r\n                                    <div style={{ height: 20, marginBottom: 20 }}>\r\n                                        <p style={{ fontSize: 20, fontWeight: 'bold', lineHeight: 0, float: 'left' }}>Grand Total</p>\r\n                                        <p style={{ fontSize: 20, fontWeight: 'bold', lineHeight: 0, float: 'right' }}>{data.grand_total}</p>\r\n                                    </div>\r\n                                    <hr style={{ height: 2, border: 'none', backgroundColor: 'black' }} />\r\n                                    <div style={{ height: 20, marginBottom: 30 }}>\r\n                                        <p style={{ fontSize: 20, fontWeight: 'bold', lineHeight: 0, float: 'left' }}>Due</p>\r\n                                        <p style={{ fontSize: 20, fontWeight: 'bold', lineHeight: 0, float: 'right' }}>{data.grand_total - data.paid_amount}</p>\r\n                                    </div>\r\n                                    <p style={{ fontSize: 20, fontWeight: 'bold', lineHeight: 0 }}>Powered By: Heaven Engineering</p>\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                    )\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default class EnhancedTable extends React.Component {\r\n\r\n    // classes = useStyles();\r\n\r\n    render() {\r\n        // const { name, price, quantity, grand_total } = this.props.history.location.state;\r\n\r\n        return (\r\n            <div\r\n            // className={this.classes.root} \r\n            >\r\n                {/* {JSON.stringify(this.props.history.location.state)} */}\r\n\r\n                <Paper\r\n                // className={this.classes.paper}\r\n                >\r\n\r\n                    <EnhancedTableToolbar />\r\n\r\n                    <Container maxWidth=\"lg\"\r\n                    // className={this.classes.container}\r\n                    >\r\n                        <Grid container spacing={3}>\r\n\r\n                            <Grid item xs={12} md={12} lg={12}>\r\n                                <Paper>\r\n\r\n                                    <div style={{}}>\r\n                                        <ComponentToPrint ref={(el) => (this.componentRef = el)} />\r\n                                        <ReactToPrint\r\n                                            trigger={() =>\r\n                                                <Button\r\n                                                    style={{ marginLeft: 10 }}\r\n                                                    variant=\"contained\"\r\n                                                    color=\"primary\"\r\n                                                    size=\"large\"\r\n                                                    // className={classes.button}\r\n                                                    // startIcon={}\r\n                                                    onClick={() => alert('wormign')}\r\n                                                >\r\n                                                    <PrintIcon />\r\n                                                </Button>}\r\n                                            content={() => this.componentRef}\r\n                                        />\r\n                                    </div>\r\n                                </Paper>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                    </Container>\r\n\r\n\r\n\r\n                </Paper>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default function StockOfAllSuppliers() {\r\n    return (\r\n        <div>\r\n            hello\r\n        </div>\r\n    )\r\n}\r\n","import { Grid } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport api from '../../api/api';\r\nimport Button from '@mui/material/Button';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\nexport default function AdminLogin(props) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [first_name, set_first_name] = useState('')\r\n    const [last_name, set_last_name] = useState('')\r\n    const history = useHistory()\r\n    const [isSignin, setIsSignin] = useState(history.location.state?.data ? false : true)\r\n\r\n    const signin = async () => {\r\n\r\n        const res = await api.post(`admin/login`, {\r\n            email,\r\n            password\r\n        })\r\n        if (res.data.data) {\r\n            if (res.data.data.type == \"admin\")\r\n                localStorage.setItem('isadmin', 'admin')\r\n            localStorage.setItem('token', JSON.stringify(res.data.data))\r\n            window.location.reload()\r\n        }\r\n    }\r\n    const signup = async () => {\r\n        const res = await api.post(`admin/signup`, {\r\n            first_name,\r\n            last_name,\r\n            email,\r\n            password,\r\n            type: history.location.state?.data || 'admin'\r\n        })\r\n        if (res.data.data) {\r\n            localStorage.setItem('token', JSON.stringify(res.data.data))\r\n            window.location.reload()\r\n            // props.changeLogin()\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Grid container style={{ height: '100vh' }} spacing={5}>\r\n            {/* {JSON.stringify(history.location.state.data)} */}\r\n            {/* <Grid item xs={4} style={{ backgroundColor: 'green', height: '100vh' }}>\r\n\r\n            </Grid> */}\r\n            <Grid item xs={12} >\r\n                <div style={{ textAlign: 'center' }}>\r\n\r\n                    <div style={{ height: 300, width: 500, backgroundColor: 'white', textAlign: 'center', margin: 'auto', marginTop: 50 }}>\r\n                        <h2>Sign in to your account!</h2>\r\n                        {\r\n                            isSignin ?\r\n                                <>\r\n                                    <form onSubmit={signin}>\r\n                                        <Box sx={{ width: 500 }}>\r\n                                            <AccountCircle sx={{ color: 'action.active', mr: 1, my: 0.5 }} />\r\n                                            <TextField value={email} id=\"input-with-sx\" label=\"Your Email\" variant=\"standard\" style={{ width: 300, }} onChange={e => setEmail(e.target.value)} />\r\n                                        </Box>\r\n                                        <Box sx={{ width: 500, }}>\r\n                                            <AccountCircle sx={{ color: 'action.active', mr: 1, my: 0.5 }} />\r\n                                            <TextField value={password} id=\"input-with-sx\" type=\"password\" label=\"Your Password\" variant=\"standard\" style={{ width: 300, }} onChange={e => setPassword(e.target.value)} />\r\n                                        </Box>\r\n                                        <Button variant=\"outlined\" onClick={signin}>LOGIN</Button>\r\n                                    </form>\r\n                                    <p onClick={() => setIsSignin(false)}>SignUp?</p>\r\n                                </>\r\n                                : <>\r\n                                    <form onSubmit={signup}>\r\n                                        <Box sx={{ width: 500 }}>\r\n                                            <AccountCircle sx={{ color: 'action.active', mr: 1, my: 0.5 }} />\r\n                                            <TextField value={first_name} id=\"input-with-sx\" label=\"First Name\" variant=\"standard\" style={{ width: 300, }} onChange={e => set_first_name(e.target.value)} />\r\n                                        </Box>\r\n                                        <Box sx={{ width: 500, }}>\r\n                                            <AccountCircle sx={{ color: 'action.active', mr: 1, my: 0.5 }} />\r\n                                            <TextField value={last_name} id=\"input-with-sx\" label=\"Last Name\" variant=\"standard\" style={{ width: 300, }} onChange={e => set_last_name(e.target.value)} />\r\n                                        </Box>\r\n                                        <Box sx={{ width: 500, }}>\r\n                                            <AccountCircle sx={{ color: 'action.active', mr: 1, my: 0.5 }} />\r\n                                            <TextField value={email} id=\"input-with-sx\" label=\"Email\" variant=\"standard\" style={{ width: 300, }} onChange={e => setEmail(e.target.value)} />\r\n                                        </Box>\r\n                                        <Box sx={{ width: 500, }}>\r\n                                            <AccountCircle sx={{ color: 'action.active', mr: 1, my: 0.5 }} />\r\n                                            <TextField value={password} id=\"input-with-sx\" type=\"password\" label=\"Password\" variant=\"standard\" style={{ width: 300, }} onChange={e => setPassword(e.target.value)} />\r\n                                        </Box>\r\n                                        <Button variant=\"outlined\" onClick={signup}>REGISTER</Button>\r\n                                    </form>\r\n                                    {\r\n                                        !history.location.state?.data &&\r\n\r\n                                        <p onClick={() => setIsSignin(true)}>LOGIN?</p>\r\n                                    }\r\n                                </>\r\n\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"../Form/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport KeyboardVoiceIcon from \"@material-ui/icons/KeyboardVoice\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport api from \"../../api/api\";\r\nimport Toast from \"../Toast/toast\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\nexport default function Form() {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [details, setDetails] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [chqDate, setchqDate] = useState(\"\");\r\n  const [paid_amount, set_paid_amount] = useState();\r\n  const [chequeNo, set_chequeNo] = useState();\r\n  const [open, setOpen] = useState(false);\r\n  const [allCustomers, setAllCustomers] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    if (history.location.pathname == \"/customerpayment\") {\r\n      const res1 = await api.get(\"customer/get_all\");\r\n      if (res1.data.data) setAllCustomers(res1.data.data);\r\n    }\r\n    if (history.location.pathname == \"/supplierpayment\") {\r\n      const res1 = await api.get(\"supplier/get_all\");\r\n      if (res1.data.data) setAllCustomers(res1.data.data);\r\n    }\r\n  }, []);\r\n\r\n  setTimeout(() => {\r\n    setOpen(false);\r\n    // alert('called')\r\n  }, 5000);\r\n\r\n  const submit = async () => {\r\n    if (history.location.pathname == \"/customerpayment\") {\r\n      const res = await api.post(`customer/add_payment`, {\r\n        customer_name: firstName?.name,\r\n        details,\r\n        paid_amount,\r\n        date,\r\n       \r\n      });\r\n      alert(JSON.stringify(res.data.data));\r\n      return;\r\n    } else {\r\n      const res = await api.post(`supplier/add_payment`, {\r\n        supplier_name: firstName?.name,\r\n        details,\r\n        paid_amount,\r\n        date,\r\n        supplierID: firstName?.id,\r\n        chqDate,\r\n        chequeNo\r\n      });\r\n      console.log(res);\r\n      // alert(JSON.stringify(res.data.data))\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid\r\n        container\r\n        xs={12}\r\n        style={{ padding: \"0 250px 0 200px\", marginTop: 50 }}\r\n      >\r\n        {/* <form onSubmit > */}\r\n        <Autocomplete\r\n          id=\"combo-box-demo\"\r\n          options={allCustomers}\r\n          getOptionLabel={(option) =>\r\n            history.location.pathname == \"/customerpayment\"\r\n              ? option.customer_name\r\n              : option.supplier_name\r\n          }\r\n          onChange={(e, newValue) => {\r\n            console.log(newValue, \"NEWVALUE\");\r\n            if (history.location.pathname == \"/customerpayment\") {\r\n              setFirstName({ name: newValue?.customer_name });\r\n            } else {\r\n              setFirstName({\r\n                name: newValue?.supplier_name,\r\n                id: newValue?._id,\r\n              });\r\n            }\r\n          }}\r\n          renderInput={(params) => (\r\n            <>\r\n              <div ref={params.InputProps.ref} style={{}}>\r\n                Name\r\n                <input\r\n                  style={{\r\n                    height: 35,\r\n                    marginLeft: 157,\r\n                    width: 587,\r\n                    marginBottom: 10,\r\n                  }}\r\n                  type=\"text\"\r\n                  placeholder=\"Name\"\r\n                  {...params.inputProps}\r\n                />\r\n              </div>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        {/* <TextField\r\n                    required\r\n                    id=\"Name\"\r\n                    name=\"Name\"\r\n                    label=\"name\"\r\n                    placeholder={`Name`}\r\n                    autoComplete=\"given-name\"\r\n                    variant=\"filled\"\r\n                    value={firstName}\r\n                    title={`Name`}\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                    style={{ height: 35, marginBottom: 10 }}\r\n                // style={{ borderWidth: 0.1, width: '100%', height: 35 }}\r\n                /> */}\r\n\r\n        <TextField\r\n          // required\r\n          id=\"Details\"\r\n          name=\"Details\"\r\n          title=\"Details\"\r\n          placeholder=\"Details\"\r\n          type=\"textarea\"\r\n          style={{ marginBottom: 20 }}\r\n          value={details}\r\n          onChange={(e) => setDetails(e.target.value)}\r\n          style={{ height: 35, marginBottom: 50 }}\r\n        />\r\n        <TextField\r\n          // required\r\n          id=\"Paid\"\r\n          name=\"Paid\"\r\n          label=\"Paid Amount\"\r\n          placeholder=\"Paid Amount\"\r\n          value={paid_amount}\r\n          title=\"Paid Amount\"\r\n          onChange={(e) => set_paid_amount(parseInt(e.target.value))}\r\n          style={{ height: 35, marginBottom: 10 }}\r\n          inputType=\"number\"\r\n        />\r\n        <TextField\r\n          required\r\n          id=\"date\"\r\n          name=\"date\"\r\n          inputType=\"date\"\r\n          title=\"Date\"\r\n          placeholder=\"Date\"\r\n          value={date}\r\n          onChange={(e) => setDate(e.target.value)}\r\n          style={{ height: 35, marginBottom: 10 }}\r\n        />\r\n        <TextField\r\n          required\r\n          id=\"chqDate\"\r\n          name=\"chqDate\"\r\n          inputType=\"date\"\r\n          title=\"Cheque Date\"\r\n          placeholder=\"Date\"\r\n          value={chqDate}\r\n          onChange={(e) => setchqDate(e.target.value)}\r\n          style={{ height: 35, marginBottom: 10 }}\r\n        />\r\n\r\n        <TextField\r\n          // required\r\n          id=\"chequeNo\"\r\n          name=\"chequeNo\"\r\n          label=\"Cheque No\"\r\n          placeholder=\"Cheque No\"\r\n          value={chequeNo}\r\n          title=\"Cheque No\"\r\n          onChange={(e) => set_chequeNo(parseInt(e.target.value))}\r\n          style={{ height: 35, marginBottom: 10 }}\r\n          inputType=\"number\"\r\n        />\r\n\r\n        <Grid item xs={12} sm={6}>\r\n          <Button\r\n            variant=\"contained\"\r\n            // color=\"primary\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            // startIcon={<SaveIcon />}\r\n            onClick={() => submit()}\r\n            style={{ backgroundColor: \"#003366\", color: \"white\" }}\r\n          >\r\n            Save\r\n          </Button>\r\n        </Grid>\r\n\r\n        {/* </form> */}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Form from './form';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\n\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        position: 'relative',\r\n        backgroundColor: 'white',\r\n        color: 'black'\r\n    },\r\n    layout: {\r\n        width: 'auto',\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n            width: 600,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(3),\r\n        padding: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n            marginTop: theme.spacing(6),\r\n            marginBottom: theme.spacing(6),\r\n            padding: theme.spacing(3),\r\n        },\r\n    },\r\n    stepper: {\r\n        padding: theme.spacing(3, 0, 5),\r\n    },\r\n    buttons: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\nexport default function PaymentForm() {\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const history = useHistory()\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n\r\n            <AppBar position=\"absolute\" className={classes.appBar} >\r\n                <Toolbar>\r\n                    <Grid xs={9}>\r\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n\r\n                            {history.location.pathname == '/addcustomer' && \"Add Customer\"}\r\n                            {history.location.pathname == '/editcustomer' && \"Edit Customer\"}\r\n                            {history.location.pathname == '/editsupplier' && \"Edit Supplier\"}\r\n                            {history.location.pathname == '/addsupplier' && \"Add Supplier\"}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Breadcrumbs aria-label=\"breadcrumb\" style={{ float: 'right' }}>\r\n                        <Link color=\"inherit\" href=\"/\" >\r\n                            Dashboard\r\n                        </Link>\r\n\r\n                        <Typography color=\"textPrimary\">Add Customer</Typography>\r\n                    </Breadcrumbs>\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Form />\r\n        </React.Fragment>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport api from '../../api/api';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Bar from '../AppBar/AppBarComponent'\r\nimport { isAdmin } from '../../helpers/isAuthenticated'\r\n\r\n\r\nfunction createData(Id, From, Name, Details, PaidAmount, Date, RemaingBalance) {\r\n    // alert('pushed to rows')\r\n    return { Id, From, Name, Details, PaidAmount, Date, RemaingBalance };\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n    const history = useHistory()\r\n    const classes = useStyles();\r\n    const [rows, setRows] = useState([])\r\n    const [allStock, setAllStock] = useState([])\r\n\r\n    const [openDialog, setOpenDialog] = React.useState(false);\r\n    const [itemToDelete, setItemToDelete] = React.useState('');\r\n    const handleDialog = () => {\r\n        setOpenDialog(!openDialog)\r\n    }\r\n\r\n    // const DeleteItem = async () => {\r\n    //     var res = null;\r\n    //     res = await api.delete(`stock/delete/${itemToDelete}`)\r\n    //     handleDialog()\r\n    //     window.location.reload()\r\n    // }\r\n    useEffect(async () => {\r\n        var temp = []\r\n        if (history.location.pathname == \"/customerpaymentList\") {\r\n            const res1 = await api.get(\"customer/get_all_payments\")\r\n            if (res1.data.data) {\r\n                res1.data.data.map(item =>\r\n                    temp.push(createData(item._id, item.from, item.customer_name, item.details, item.paid_amount, item.date, item.remaing_balance))\r\n                )\r\n                setRows(temp)\r\n                setAllStock(res1.data.data)\r\n            }\r\n        }\r\n        if (history.location.pathname == \"/supplierpaymentList\") {\r\n            var temp = []\r\n            const res1 = await api.get(\"supplier/get_all_payments\")\r\n            if (res1.data.data) {\r\n                // alert(JSON.stringify(res1.data.data[0]))\r\n\r\n                res1.data.data.map(item => {\r\n\r\n                    temp.push(createData(item._id, item.from, item.supplier_name, item.details, item.paid_amount, item.date, item.remaing_balance))\r\n                }\r\n                )\r\n                setRows(temp)\r\n                setAllStock(res1.data.data)\r\n            }\r\n        }\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    const setDataForSearch = (data) => {\r\n        var temp = []\r\n        data.map(item =>\r\n            temp.push(createData(item._id, item.from, item.supplier_name || item.customer, item.details, item.paid_amount, item.date, item.remaing_balance))\r\n        )\r\n        setRows(temp)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Bar title=\"Payments\" link1=\"Dashboard\" link2=\"Payments\" data={allStock} setDataForSearch={setDataForSearch} from='paymentlist' isButton={true} onClick={() => window.location = history.location.pathname == \"/supplierpaymentList\" ? '/supplierpayment' : 'customerpayment'} />\r\n\r\n            <div className={classes.root}>\r\n\r\n                <Paper className={classes.paper}>\r\n\r\n\r\n\r\n                    <TableContainer component={Paper}>\r\n                        <Table className={classes.table} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Id</TableCell>\r\n                                    <TableCell>From</TableCell>\r\n                                    <TableCell>Name</TableCell>\r\n                                    <TableCell>Details</TableCell>\r\n                                    <TableCell>Paid Amount</TableCell>\r\n                                    <TableCell>Date</TableCell>\r\n                                    <TableCell>Remaining Amount</TableCell>\r\n\r\n\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows.map((row, index) => (\r\n                                    <TableRow key={row.name}>\r\n\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {index + 1011}\r\n                                        </TableCell>\r\n                                        <TableCell >{row.From}</TableCell>\r\n                                        <TableCell >{row.Name}</TableCell>\r\n                                        <TableCell >{row.Details}</TableCell>\r\n                                        <TableCell >{row.PaidAmount}</TableCell>\r\n                                        <TableCell >{row?.Date?.split('T')[0]}</TableCell>\r\n                                        <TableCell >{row.RemaingBalance}</TableCell>\r\n\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n\r\n                </Paper>\r\n\r\n                {/* <Dialog\r\n                    open={openDialog}\r\n                    onClose={handleDialog}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"Are you sure to delete?\"}</DialogTitle>\r\n\r\n                    <DialogActions>\r\n                        <Button onClick={handleDialog} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={DeleteItem} style={{ color: 'red' }} autoFocus>\r\n                            Yes\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog> */}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import { Grid } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport Switch from '@mui/material/Switch';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport Box from '@mui/material/Box';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport api from '../../api/api';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst AddLedger = (props) => {\r\n\r\n    const history = useHistory();\r\n    const [entry, setentry] = useState({\r\n        serielNumber: \"\",\r\n        supplierID: new URLSearchParams(props.history.location.search).get('supplier'),\r\n        customerID: new URLSearchParams(props.history.location.search).get('customer'),\r\n        particular: \"\",\r\n        chqDate: \"\",\r\n        chequeNo: \"\",\r\n        debit: false,\r\n        Payment: ''\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n        if (event.target.name === \"debit\") {\r\n            setentry({ ...entry, [event.target.name]: event.target.checked })\r\n        }\r\n        else {\r\n            setentry({ ...entry, [event.target.name]: event.target.value })\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n\r\n            const res = await api.post(`/${entry.supplierID?'supplier':'customer'}/add_payment`,{\r\n\r\n                serielNumber:entry.serielNumber,\r\n                supplierID:entry.supplierID,\r\n                customerID:entry.customerID,\r\n                particular:entry.particular,\r\n                chqDate:entry.chqDate,\r\n                chequeNo:entry.chequeNo,\r\n                debit:entry.debit,\r\n                ammount:entry.Payment\r\n            });\r\n            console.log(res)\r\n            console.log(res.data.data)\r\n            history.push(`/detail?type=${entry.supplierID?'supplier':'customer'}&id=${entry.supplierID?entry.supplierID:entry.customerID}`)\r\n        } catch (error) {\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <Grid xs={9} md={7} lg={5} className='mx-auto' >\r\n            <Box m={2} p={3}>\r\n                <form onSubmit={handleSubmit} >\r\n                    <h1>Add Ledger Entry</h1>\r\n                    <label htmlFor=\"serielNumber\" >Serial Number</label>\r\n                    <input\r\n                        required={true}\r\n                        id='serielNumber'\r\n                        name='serielNumber'\r\n                        placeholder='Serial Number'\r\n                        value={entry.serielNumber}\r\n                        onChange={handleChange}\r\n                        style={{ borderWidth: 0.1, width: '100%', height: 35, paddingLeft: 10, marginBottom: 10 }}\r\n                        type='text'\r\n                    />\r\n                    <label htmlFor=\"particular\" >Particular</label>\r\n                    <input\r\n                        required={true}\r\n                        id='particular'\r\n                        name='particular'\r\n                        placeholder='Particular'\r\n                        value={entry.particular}\r\n                        onChange={handleChange}\r\n                        style={{ borderWidth: 0.1, width: '100%', height: 35, paddingLeft: 10, marginBottom: 10 }}\r\n                        type='text'\r\n                    />\r\n                    <label htmlFor=\"chqDate\" >Cheque Date</label>\r\n                    <input\r\n                        required={true}\r\n                        id='chqDate'\r\n                        name='chqDate'\r\n                        placeholder='Cheque Date'\r\n                        value={entry.chqDate}\r\n                        onChange={handleChange}\r\n                        style={{ borderWidth: 0.1, width: '100%', height: 35, paddingLeft: 10, marginBottom: 10 }}\r\n                        type='text'\r\n                    />\r\n                    <label htmlFor=\"chequeNo\" >Cheque No</label>\r\n                    <input\r\n                        required={true}\r\n                        id='chequeNo'\r\n                        name='chequeNo'\r\n                        placeholder='Cheque No'\r\n                        value={entry.chequeNo}\r\n                        onChange={handleChange}\r\n                        style={{ borderWidth: 0.1, width: '100%', height: 35, paddingLeft: 10, marginBottom: 10 }}\r\n                        type='text'\r\n                    />\r\n                    <label>Payment Type</label>\r\n                    <FormGroup>\r\n                        <FormControlLabel control={\r\n                            <Switch\r\n                                checked={entry.debit}\r\n                                onChange={handleChange}\r\n                                inputProps={{ 'aria-label': 'controlled', 'name': 'debit' }}\r\n                            />} label={entry.debit ? 'Debit' : 'Credit'} />\r\n                    </FormGroup>\r\n                    <label htmlFor=\"Payment\" >Payment</label>\r\n                    <input\r\n                        required={true}\r\n                        id='Payment'\r\n                        name='Payment'\r\n                        placeholder='Payment'\r\n                        value={entry.Payment}\r\n                        onChange={handleChange}\r\n                        style={{ borderWidth: 0.1, width: '100%', height: 35, paddingLeft: 10, marginBottom: 10 }}\r\n                        type='text'\r\n                    />\r\n                    <button className='btn MuiButton-containedPrimary' type='submit'>ADD</button>\r\n                </form>\r\n            </Box>\r\n        </Grid>\r\n    </div>;\r\n};\r\n\r\nexport default AddLedger;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router\";\r\nimport Checkout from \"../Components/Form/Checkout\";\r\nimport CustomerList from '../Components/Customer/CustomerList'\r\nimport StockList from \"../Components/Stock/StockList\";\r\nimport StockCheckout from '../Components/Stock/Checkout'\r\nimport PrintInvoice from '../Components/Invoice/PrintInvoice'\r\nimport Home from '../Components/Home/home'\r\nimport AddInvoice from \"../Components/Invoice/AddInvoice\";\r\nimport AddProduct from '../Components/Product/AddProduct'\r\nimport ManageCategory from '../Components/Product/ManageCategory'\r\nimport ManageProduct from '../Components/Product/ManageProduct'\r\nimport Manageinvoice from '../Components/Invoice/ManageInvoice'\r\nimport PersonDetail from '../Components/PersonDetail/PersonDetail'\r\nimport AllInvoices from '../Components/Invoice/AllInvoices'\r\nimport StockOfAllSuppliers from '../Components/Stock/StockOfAllSuppliers'\r\nimport AdminLogin from \"../Components/AdminLogin/AdminLogin\";\r\nimport PaymentForm from '../Components/Payment/PaymentForm'\r\nimport PaymentList from '../Components/Payment/PaymentList'\r\nimport AddLedger from \"../Components/Ledger/AddLedger\";\r\n\r\n\r\nexport default function App() {\r\n    return (\r\n        <Switch>\r\n\r\n            <Route exact path=\"/addsubadmin\" component={AdminLogin} />\r\n\r\n\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/customerlist\" component={CustomerList} />\r\n            <Route exact path=\"/addcustomer\" component={Checkout} />\r\n            <Route exact path=\"/editcustomer\" component={Checkout} />\r\n\r\n\r\n\r\n            <Route exact path=\"/supplierlist\" component={CustomerList} />\r\n            <Route exact path=\"/addsupplier\" component={Checkout} />\r\n            <Route exact path=\"/editsupplier\" component={Checkout} />\r\n\r\n\r\n\r\n            <Route exact path=\"/stocklist\" component={StockList} />\r\n            <Route exact path=\"/stockofsupplier\" component={StockOfAllSuppliers} />\r\n            <Route exact path=\"/addstock\" component={StockCheckout} />\r\n            <Route exact path=\"/editstock\" component={StockCheckout} />\r\n\r\n\r\n\r\n            <Route exact path=\"/manageinvoice\" component={Manageinvoice} />\r\n            <Route exact path=\"/printinvoice\" component={PrintInvoice} />\r\n            <Route exact path=\"/addinvoice\" component={AddInvoice} />\r\n\r\n\r\n\r\n            <Route exact path=\"/addcategory\" component={ManageCategory} />\r\n            <Route exact path=\"/addproduct\" component={AddProduct} />\r\n            <Route exact path=\"/editproduct\" component={AddProduct} />\r\n            <Route exact path=\"/manageproduct\" component={ManageProduct} />\r\n\r\n\r\n\r\n            <Route exact path=\"/detail\" component={PersonDetail} />\r\n            <Route exact path='/Add_Ledger_Entry' component={AddLedger} />\r\n\r\n\r\n\r\n            <Route exact path=\"/allinvoicesof\" component={AllInvoices} />\r\n\r\n\r\n\r\n            <Route exact path=\"/customerpayment\" component={PaymentForm} />\r\n            <Route exact path=\"/customerpaymentList\" component={PaymentList} />\r\n\r\n            <Route exact path=\"/supplierpayment\" component={PaymentForm} />\r\n            <Route exact path=\"/supplierpaymentList\" component={PaymentList} />\r\n        </Switch>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MainListItems from './listItems';\r\nimport Toast from './Toast/toast'\r\nimport ExitToAppIcon from '@mui/icons-material/ExitToApp';\r\n\r\n\r\n\r\nimport Checkout from './Form/Checkout';\r\nimport Routes from '../route/route'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n        backgroundColor: '#f5f5f5',\r\n        color: '#003366'\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        backgroundColor: '#002447',\r\n        color: '#f5f5f5',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        backgroundColor: '#003366'\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        // paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 870,\r\n    },\r\n    button: {\r\n        marginLeft: 10,\r\n        backgroundColor: '#003366'\r\n    }\r\n}));\r\n\r\nexport default function Dashboard() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(true);\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n\r\n            <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                        Admin Panel\r\n                    </Typography>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        className={classes.button}\r\n                        // startIcon={<SaveIcon />}\r\n                        onClick={() => window.location = '/invoice'}\r\n                    >\r\n                        Invoice\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        className={classes.button}\r\n                        // startIcon={<SaveIcon />}\r\n                        onClick={() => window.location = '/addcustomer'}\r\n                    >\r\n                        Add Customer\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        className={classes.button}\r\n                        // startIcon={<SaveIcon />}\r\n                        onClick={() => window.location = '/addsupplier'}\r\n                    >\r\n                        Add Supplier\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        className={classes.button}\r\n                        // startIcon={<SaveIcon />}\r\n                        onClick={() => window.location = '/addstock'}\r\n                    >\r\n                        Add Stock\r\n                    </Button>\r\n                    {/* <IconButton color=\"inherit\">\r\n                        <Badge badgeContent={0} color=\"secondary\">\r\n                            <NotificationsIcon />\r\n                        </Badge>\r\n                    </IconButton> */}\r\n                    <ExitToAppIcon style={{ marginLeft: 5 }} onClick={() => {\r\n                        localStorage.clear();\r\n                        window.location = '/'\r\n                    }} />\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                classes={{\r\n                    paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n                }}\r\n                open={open}\r\n            // style={{ backgroundColor: '' }}\r\n            >\r\n                <div className={classes.toolbarIcon}\r\n                    // onClick={() => window.location = '/'} \r\n                    style={{ cursor: 'pointer' }}>\r\n                    Point Of Sale\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        <ChevronLeftIcon style={{ color: '#f5f5f5' }} />\r\n                    </IconButton>\r\n                </div>\r\n\r\n                <Divider />\r\n                <MainListItems />\r\n                {/* <Divider /> */}\r\n                {/* <List>{secondaryListItems}</List> */}\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer} />\r\n                <Container className={classes.container}>\r\n                    <Grid container spacing={3}>\r\n                        {/* Chart */}\r\n                        <Grid item xs={12} md={12} lg={12}>\r\n                            <Paper >\r\n                                <Routes />\r\n                                {/* <Chart /> */}\r\n                                {/* <Checkout /> */}\r\n                            </Paper>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\n\r\nexport default function Notfound() {\r\n    return (\r\n        <div>\r\n            404 Page not found!\r\n        </div>\r\n    )\r\n}\r\n","import Dashboard from \"./Components/Dashboard\";\r\nimport { isAuthenticated } from './helpers/isAuthenticated'\r\nimport AdminLogin from \"./Components/AdminLogin/AdminLogin\";\r\nimport { useState } from \"react\";\r\nimport Notfound from \"./Components/Notfound/Notfound\";\r\nimport { Switch, Route } from \"react-router\";\r\nfunction App() {\r\n  const [loggedIn, setLoggedIn] = useState(false)\r\n  const changeLogin = () => {\r\n    setLoggedIn(!loggedIn)\r\n  }\r\n\r\n  if (!isAuthenticated())\r\n    return (\r\n      <Switch>\r\n        <Route exact path=\"/\" component={AdminLogin} />\r\n        <Route component={Notfound} />\r\n      </Switch>\r\n    )\r\n  else return <Dashboard />\r\n\r\n\r\n  // if (true)\r\n  //   return (\r\n  //     <Dashboard />\r\n  //   );\r\n  // else\r\n  //   return (\r\n  //     <AdminLogin changeLogin={changeLogin} />\r\n  //   );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Route component={App} />\r\n    {/* <Dashboard /> */}\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}